<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux应知应会</title>
      <link href="/posts/4569329.html"/>
      <url>/posts/4569329.html</url>
      
        <content type="html"><![CDATA[<h1 id="Linux应知应会"><a href="#Linux应知应会" class="headerlink" title="Linux应知应会"></a>Linux应知应会</h1><p>首先我们所说的学Lixux并不是学“Linux”,那个和内核相关境界达不到，所以说白了我们就是在体验。你真正应该学习的对后续不管就业还是科研有用的就是shell,那么从shell开始也不符合认知，所以先认识Linux。</p><h2 id="Linux初识"><a href="#Linux初识" class="headerlink" title="Linux初识"></a>Linux初识</h2><p>Linux是操作系统分为四部分：<br>1.Linux kernel<br>2.GNU tools(GNU 本质上是一个旨在打造完全自由软件的操作系统项目)<br>3.GUI desktop<br>4.Application<br><img src="../img/Linux应知应会/1.png" alt="图1"><br>因为某些原因吧GNU(genu)没有创建出自己的操作系统，但是GNU开发的工具（比如我们熟知的GCC编译器）和林纳斯开发的内核刚好就组成了操作系统，所以全名应该叫GNU/Linux更合适。<br>然后大概说下文件系统，文件系统说白了就是提供了读写标准，比如我们都直到windows是NTFS，Linux目前应该是ext4可以自行搜索了解一下,然后你可以用df -T看一下分区这个后面再说可以看到Type列不只有ext4还有其他的不像windows都是NTFS那么统一。<br>然后大概说下shell,shell提供给用户使用的软件，用户用他使用电脑进行交互，其实分两类CLI（Command-Line Interface命令行界面）和GUI，但是我们一般就直接指CLI了,所以学好shell！</p><h2 id="常见命令"><a href="#常见命令" class="headerlink" title="常见命令"></a>常见命令</h2><p>推荐好用的第三方软件<a href="https://github.com/nvbn/thefuck">https://github.com/nvbn/thefuck</a><br>tab和上下键，没必要练习打字<br>英语不好参考<a href="https://wangchujiang.com/linux-command/">https://wangchujiang.com/linux-command/</a><br>复制crtl+shift+c<br>小技巧 ctrl+方向键可以跳，这就是为啥命名喜欢用_<br>ctrl a(ahead) 跳到开头 ctrl e (end) 跳到结尾<br>ctrl u 把光标前（不包含）全删了<br>ctrl k 把光标（包含）后全删了<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">ls -a 显示隐藏文件</span><br><span class="line">用户名@计算机名（因为允许一个中端多用户操作方便区分）</span><br><span class="line">~ 用户home目录</span><br><span class="line">ll</span><br><span class="line">man ls 自己学（pg up pg dn翻页 q退出）</span><br><span class="line">clear</span><br><span class="line">cd /</span><br><span class="line">cd ..</span><br><span class="line">cd - (快速切换回上一次所在的目录)</span><br><span class="line">cd !$ (切换到上一条命令中最后一个参数所表示的目录)</span><br><span class="line">touch 1.txt （用于创建空文件或修改文件的时间戳）</span><br><span class="line">mkdir test</span><br><span class="line">vim 1.txt</span><br><span class="line">gedit 1.txt</span><br><span class="line">cp 你想复制的文件 你想复制到哪里</span><br><span class="line">cp 源文件 目标文件（建议使用cp -i 手动确定是否覆盖文件 y n）</span><br><span class="line">cp -r src dest (recursive,将src目录及其所有内容复制到dest目录中,其实不懒省事建议加上/明确表示目录，但是我懒)</span><br><span class="line">cp -r src/* dest/ (只想复制src目录内的内容（不含src本身到dest)</span><br><span class="line">cp ../src/* . （建议熟练能使用.）</span><br><span class="line">rm </span><br><span class="line">sudo rm -rf /*</span><br><span class="line">rm -i (推荐)</span><br><span class="line">mv (move or rename files)</span><br><span class="line">mv org.txt rename.txt</span><br><span class="line">mv 1.java ~/Documents/JAVA/</span><br><span class="line">cat 1.txt</span><br><span class="line">less app.log  (查看文件内容,上下箭头 enter pg up dn,/查找，enter退出查找，q退出less)</span><br><span class="line">tail/head -n 2 1.txt</span><br><span class="line">df -h （查看磁盘分区使用情况）</span><br><span class="line">du -h (看下当前目录哪个文件站的空间大，xs)</span><br><span class="line">sort -Mr time.log</span><br><span class="line">du -sh * | sort -nr (快速定位当前目录下占用磁盘空间较大的文件或目录的组合命令)</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h2 id="Linux目录"><a href="#Linux目录" class="headerlink" title="Linux目录"></a>Linux目录</h2><p>看<a href="https://www.pathname.com/fhs/">https://www.pathname.com/fhs/</a><br>fhs Filesystem Hierarchy Standard（文件系统层次结构标准）<br>Linux一切皆文件（没有盘符什么乱七八糟的）<br>/ 根目录（Windows\Linux/）<br>/bin 二进制目录 GNU工具（ls其实就是文件）<br>/cdrom 光盘<br>/etc 系统文件配置目录<br>/home 显示所有用户目录<br>/lib 放的是以来的库文件<br>/mnt 挂载（外在设备和电脑进行连接（U盘））目录<br>/run 运行目录<br>/tmp 临时文件<br>/var 可变目录(log)<br>/boot 启动目录<br>/dev 设备目录<br>/opt 可选目录（存放第三方软件）<br>/root 管理员（sudo rm -rf/*）根本用不上没企业给你这个<br>/srv 服务目录 本地服务<br>/usr 看成软件资源库</p><h2 id="Linux路径"><a href="#Linux路径" class="headerlink" title="Linux路径"></a>Linux路径</h2><p>绝对路径相对路径都知道就不说了<br>但是一定要注意<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /Doc/1.txt 根目录下 </span><br><span class="line">~ cd Doc/1.txt /home/zqc/Doc/1.txt绝对路径</span><br><span class="line">./ 建议</span><br><span class="line">../ 父目录</span><br></pre></td></tr></table></figure></p><h2 id="快捷方式（-lnk）"><a href="#快捷方式（-lnk）" class="headerlink" title="快捷方式（.lnk）"></a>快捷方式（.lnk）</h2><p>Linux 叫链接文件<br>1.软连接（符号链接） （快捷方式）原来的文件/文件夹必须存在<br>2.硬链接 副本 原来的文件/文件夹必须存在（和windows不一样）<br><img src="../img/Linux应知应会/3.png" alt="图3"><br><img src="../img/Linux应知应会/2.png" alt="图2"></p><h2 id="任务管理器"><a href="#任务管理器" class="headerlink" title="任务管理器"></a>任务管理器</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">top</span><br><span class="line">ps (man一下几千行不可能全掌握)</span><br><span class="line">ps -f (查看进程状态 full format)</span><br><span class="line">ps -aux | grep named # 查看named进程详细信息</span><br><span class="line">kill PID</span><br></pre></td></tr></table></figure><h2 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h2><p>大致理解一下就是比如你插U盘显示H盘，那么这个盘是虚拟的不是你电脑上本身存在的。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo fdisk -l (查看磁盘分区表信息)</span><br><span class="line">mount /dev/hda1 /mnt （将/dev/hda1挂在/mnt之下）</span><br><span class="line">df -h （可以查看分区挂载点）</span><br></pre></td></tr></table></figure></p><h2 id="压缩与解压"><a href="#压缩与解压" class="headerlink" title="压缩与解压"></a>压缩与解压</h2><p>tar 打包 Linux只能压缩一个文件 所以看见很多文件都是先打包再压缩的，.tar.gz<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvf /tmp/bin-backup.tar.gz /home/vivek/bin/（将 /home/vivek/bin/ 目录打包，并使用 gzip 算法压缩。保存为 /tmp/bin-backup.tar.gz 文件）</span><br><span class="line">tar -zxvf /opt/soft/test/log.tar.gz （解压）</span><br><span class="line">tar -zxvf /opt/soft/test/test/log.tar.gz &amp; （挂后台解压）</span><br></pre></td></tr></table></figure></p><h2 id="父子shell"><a href="#父子shell" class="headerlink" title="父子shell"></a>父子shell</h2><p>Bash 是 Bourne Again Shell 的缩写，是 Linux 和 macOS 系统中默认的命令行解释器，核心作用是接收用户输入的命令并传递给操作系统执行。所以你可以理解成bash是shell的一种实现。<br><img src="../img/Linux应知应会/4.png" alt="图4"><br>可以看下PPID和PID关系<br><img src="../img/Linux应知应会/5.png" alt="图5"><br>bash 族谱</p><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><p>比如notepad.exe在C:\Windows\System32这个路径下面，那为什么我们在任意地方或者说盘都可以打开notepad呢？因为C:\Windows\System32这个已经存储到了系统环境变量中，所以环境变量的作用就可以理解为提前打招呼进行预约。<br>我们可以发现有系统变量和用户变量，系统变量就比如你电脑上用户1注销了或者切换成用户2，但是系统变量还是能使用。<br>在Linux中就叫全局变量和局部变量<br>printenv可以类别系统(全局变量)<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export ZQC = &quot;zqc&quot; </span><br><span class="line">echo $ZQC</span><br><span class="line">zqc</span><br><span class="line">unset ZQC</span><br></pre></td></tr></table></figure><br>父子shell可以用，但是你×掉后就没了<br>set看局部变量没什么用<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">zqc = &quot;zqc&quot; 必须小写，要不被误解成全局变量单词之间用_隔开</span><br><span class="line">echo $zqc</span><br><span class="line">zqc</span><br><span class="line">unset zqc</span><br></pre></td></tr></table></figure><br>但是你再开一个shell就没了<br>永久配置<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line">export MY_VARIABLE=my_value</span><br><span class="line">export PATH=$PATH:/home/user/my_new_path</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure></p><h2 id="Vim"><a href="#Vim" class="headerlink" title="Vim"></a>Vim</h2><p>i(insert) esc :wq<br>只知道这些就体会不到vim的妙处了<br>H左<br>L右<br>J下<br>K上<br>你会发现这个就是标准指法四个指头的键位，节省时间<br>pg up / ctrl f 向上翻页<br>pg dn / ctrl b 向下翻页<br>ctrl e 向下滚动<br>ctrl y 向上滚动<br>G 跳到最后一行<br>gg 跳到第一行<br>:q!不保存修改直接退出<br>i 光标位置前面插入<br>a 光标位置后面插入<br>o 直接到下一行输入<br>x 删除光标所在字符<br>dd 删除行<br>u 撤销<br>dw 移除当前光标往后的单词<br>v进入可视化模式移动HJKL,y复制选中内容<br>p粘贴 d删除<br>gg v G全选<br>/hello查找 n下一个 N上一个<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">:3,5s/hello/world/g → 替换第 3-5 行中所有 “hello” 为 “world”（:set number显示行号）</span><br><span class="line">:s/old/new/   当前行是 “old old old”，执行后变为 “new old old”</span><br><span class="line">:s/old/new/g  当前行 “old old old” → 变为 “new new new”</span><br><span class="line">:%s/old/new/g   把所有的都换了</span><br></pre></td></tr></table></figure></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>其实还有很多没写，尤其是tmux和docker,也许之后会补上，tmux在深度学习训练的时候必不可少尤其是长周期训练，docker不会可以脱脱睡了，当然你要真想开源后恶心别人我也没意见。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>git团队协作</title>
      <link href="/posts/1e0b46d9.html"/>
      <url>/posts/1e0b46d9.html</url>
      
        <content type="html"><![CDATA[<h1 id="git团队协作"><a href="#git团队协作" class="headerlink" title="git团队协作"></a>git团队协作</h1><p>写这篇文章其实是为了软件工程这个课需要展现团队合作，但是现在大学生大部分都不用（我也只push），科普一下（很有必要掌握），所以文章顺序就不是很符合逻辑，我会先讲解IDEA中怎么操作然后再说下Git Bash的操作，没去实习过所以也不知道是否规范，欢迎大家指正。</p><h2 id="IDEA操作"><a href="#IDEA操作" class="headerlink" title="IDEA操作"></a>IDEA操作</h2><p>只需在创建项目的时候勾选创建git仓库即可，这一步相当于git init。<br><img src="../img/git团队协作/git1.png" alt="图1"><br>这个比如你新建一个类，这个就相当于git add,提交到暂存区。<br><img src="../img/git团队协作/git2.png" alt="图2"><br><img src="../img/git团队协作/git3.png" alt="图3"><br>这个就相当于git commit -m 提交到本地库。不要提交并推送，正常操作是你需要先pull再push，为了避免代码冲突、保证团队代码同步。<br>接下来的操作我懒得截屏了<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/DocJlm/AIPlatform.git #关联远程仓库，起别名一般喜欢叫origin</span><br><span class="line"></span><br><span class="line">git pull origin main --allow-unrelated-histories #字面意思允许不相关历史合并</span><br><span class="line"></span><br><span class="line">#接下来解决冲突重复add commit</span><br><span class="line"></span><br><span class="line">git push origin master:main #推送到远程库，因为本地仓库是master分支远程是main分支，这里如果没有添加README就直接master就好因为什么都没有github空仓库默认没有分支，你上传上去就是master</span><br><span class="line"></span><br><span class="line">git branch -m master main  # 重命名本地的 master 分支为 main</span><br><span class="line"></span><br><span class="line">git pull origin main</span><br><span class="line">git push origin main #之后就省事了push,pull就ok</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>如果从合作者角度来说git clone更为合适<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:DocJlm/AIPlatform.git</span><br></pre></td></tr></table></figure><br><img src="../img/git团队协作/git4.png" alt="图4"><br>IDEA我感觉也没简单到哪去。。。<br>然后还是要注意冲突问题，下面有两个建议：<br>1.团队开发的时候避免在同一个文件中改代码<br>2.在修改一个文件前，先pull再push</p><h2 id="Git-Bash"><a href="#Git-Bash" class="headerlink" title="Git Bash"></a>Git Bash</h2><p>其实上面已经涉及了不少了。然后这里还会涉及一个fork操作不过这是跨团队合作目前来看也用不到，一些基本操作和逻辑还是一样的。我就挑重点和核心说了，一些没讲到但是也比较重要的比如log,reflog,reset等也是需要掌握的，删除没啥说的就rm之后三件套（add commit push），恢复看“指针”就行。</p><h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><p>一般来说一个新的独立功能会选择新开一个分支，好处显而易见:并行开发，大大提高效率，增加容错，给我开一个分支我写完直接删了就行（）。<br><img src="../img/git团队协作/git5.png" alt="图5"><br>可以自己动手操作一下分支合并解决相应冲突问题。<br><img src="../img/git团队协作/git6.png" alt="图6"><br><img src="../img/git团队协作/git7.png" alt="图7"><br>后续整合之后add commit即可。</p><h3 id="接受邀请"><a href="#接受邀请" class="headerlink" title="接受邀请"></a>接受邀请</h3><p>建仓者创建邀请<br><img src="../img/git团队协作/git8.png" alt="图8"><br>打开链接，accept就好。</p><h3 id="比较完整的流程"><a href="#比较完整的流程" class="headerlink" title="比较完整的流程"></a>比较完整的流程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/...</span><br><span class="line"></span><br><span class="line">git checkout -b feature/user-login  # 示例：创建&quot;用户登录&quot;功能分支这里指的是创建并使用新的分支可以看出来比较简洁，在 Git 分支命名里，通常采用 “类型 / 描述” 的格式，用于开发新功能，命名以 feature/ 开头， 后面接功能的具体描述。</span><br><span class="line"></span><br><span class="line">git status  # 查看哪些文件被修改、新增或删除</span><br><span class="line"></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line">git commit -m &quot;完成用户登录功能&quot;</span><br><span class="line"></span><br><span class="line"># 切换到主分支</span><br><span class="line">git checkout main </span><br><span class="line"></span><br><span class="line"># 拉取远程主分支最新代码</span><br><span class="line">git pull origin main</span><br><span class="line"></span><br><span class="line"># 切回自己的工作分支</span><br><span class="line">git checkout feature/user-login</span><br><span class="line"></span><br><span class="line"># 将主分支的最新代码合并到自己分支</span><br><span class="line">git merge main</span><br><span class="line"></span><br><span class="line">git push origin feature/user-login</span><br><span class="line"></span><br><span class="line"># 如果是首次推送该分支，Git 会提示设置上游分支（不一定有）</span><br><span class="line">git push --set-upstream origin feature/user-login  </span><br><span class="line">本身远程库只有一个main分支，执行完这个命令之后Git会在远程</span><br><span class="line">仓库中新建一个同名的 feature/user-login分支，同时将本</span><br><span class="line">地分支的代码推送到这个新建的远程分支并建立本地分支与远</span><br><span class="line">程分支的关联（上游分支关系）。后续再向远程推送本地分支</span><br><span class="line">的更新时，就不需要每次都指定远程仓库名和远程分支名了，直接</span><br><span class="line">执行git push 即可。Git 会自动根据上游分支的设置，将本</span><br><span class="line">地分支推送到对应的远程分支上。例如，当你又做了一些修改</span><br><span class="line">并提交到本地分支后，只需要简单地执行git push，Git 就能</span><br><span class="line">把这些修改推送到远程仓库的feature/user-login分支上。在</span><br><span class="line">需要获取远程分支的最新代码时，执行git pull，Git 会自动</span><br><span class="line">从上游分支（也就是和本地分支关联的远程分支）拉取最新的</span><br><span class="line">代码，并尝试合并到本地分支。比如团队里其他成员对远</span><br><span class="line">程的feature/user-login分支做了修改并推送上去了，你</span><br><span class="line">在本地执行git pull，就能快速将这些更新拉取到本地，</span><br><span class="line">方便继续开发。</span><br><span class="line"></span><br><span class="line"># 手动发起合并请求（PR）并经过审核</span><br><span class="line">1.在 GitHub 上找到 feature/user-login 分支，</span><br><span class="line">点击 “New pull request”</span><br><span class="line">2.选择合并目标为 main 分支，填写功能说明后提交 PR</span><br><span class="line">3.审核</span><br><span class="line">4.若审核通过，点击 “Merge pull request” 完成合并</span><br><span class="line"></span><br><span class="line"># 切换到主分支</span><br><span class="line">git checkout main</span><br><span class="line"></span><br><span class="line"># 拉取最新代码（包含已合并的你的修改）</span><br><span class="line">git pull origin main</span><br><span class="line"></span><br><span class="line"># 删除本地工作分支（可选，保持分支整洁）</span><br><span class="line">git branch -d feature/user-login</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="简化版本"><a href="#简化版本" class="headerlink" title="简化版本"></a>简化版本</h3><p>其实建立空仓库（不让github自己添加README）和自己项目关联没必要pull,下面是简化步骤<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line"></span><br><span class="line">git remote add origin https://github.com/DocJlm/AIPlatform.git #关联远程仓库，起别名一般喜欢叫origin</span><br><span class="line"></span><br><span class="line">git push origin master</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>其实我不是很理解为啥github上面之前默认分支是master，现在改成main，查了下说主人这个意思嗯嗯，反正master第一印象在我脑子里是大师，功夫熊猫。。。也是多少有点逆天了！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>KMP详解</title>
      <link href="/posts/428b39ea.html"/>
      <url>/posts/428b39ea.html</url>
      
        <content type="html"><![CDATA[<h1 id="KMP详解"><a href="#KMP详解" class="headerlink" title="KMP详解"></a>KMP详解</h1><ul><li>例题 <a href="https://leetcode.cn/problems/find-the-index-of-the-first-occurrence-in-a-string/">28.找出字符串中第一个匹配项的下标</a></li><li>题解 <a href="https://github.com/DocJlm/LeetCodeJava?tab=readme-ov-file">28.找出字符串中第一个匹配项的下标</a><br>这个算法第一次听说，假设你不是oi的话就是在数据结构课上，但是鉴于部分中国大学计算机系老师毋庸置疑的 “水” 平和令人发指的语言表达能力，大部分学生都是迷迷糊糊的，下面我对这个算法进行下详细讲解，希望对大家有所帮助。<h2 id="next数组"><a href="#next数组" class="headerlink" title="next数组"></a>next数组</h2>next数组是KMP算法核心，含义：所有p[1~j]的相等的前缀和后缀中长度的最大值<br>这里说明下细节，两个需要匹配的字符串数组下标建议从1开始因为后续j的值直接对应前j个字符，无需额外计算偏移量,比如模式串 p = “abcabx” 下标从1开始时，p[1]=’a’、p[2]=’b’…p[6]=’x’，next[5] 直接表示前5个字符abcab的最长匹配长度（值为 2），逻辑清晰。<br><img src="../img/KMP/KMP1.png" alt="图1"><br><img src="../img/KMP/KMP2.png" alt="图2"><br>如上图可以看出next数组的实际含义，第一个A没有匹配的0，第二个B同理，第三个A和第一个A匹配所以记位1，AB和前面的AB匹配长度位2所以记做2，C没有匹配的记做0，所以next[4] = 2。之后子串或者所谓模式串往后移动两个即可。<br>通过这个例子也可以看出KMP的优势就是，当匹配到不同字符的时候，由于已经知道前面匹配成功的字符信息，就可以利用信息避免暴力遍历方法中的回退操作。也就是上面指针步回退，那么算法的时间复杂度就是线性的了（从O(n*m)到O(n+m))!<h2 id="计算-next-数组"><a href="#计算-next-数组" class="headerlink" title="计算 next 数组"></a>计算 next 数组</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">for (int i = 2, j = 0; i &lt;= m; i++) &#123;</span><br><span class="line">            while (j &gt; 0 &amp;&amp; p.charAt(i) != p.charAt(j + 1)) &#123;</span><br><span class="line">                j = next[j];</span><br><span class="line">            &#125;</span><br><span class="line">            if (p.charAt(i) == p.charAt(j + 1)) &#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            next[i] = j;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>就按照上面的例子进行讲解说明：<br>数组 next 长度为 m + 1（m 是子串长度，这里 m = 5），所以 next 数组大小为 6。<br>循环变量 i 从 2 开始（因为子串第一个字符索引为 1，next[1] 固定为 0，从第二个字符，即索引 2 开始计算），j 初始化为 0。<br><strong>第一次循环（i = 2，计算 next[2]）</strong><br>比较 p.charAt(i)（i = 2，即子串中索引为 2 的字符 ‘B’）和 p.charAt(j + 1)（j = 0，所以是 p.charAt(1)，即字符 ‘A’）。<br>因为 ‘B’ != ‘A’，且 j = 0，不满足 j &gt; 0，所以 while 循环不执行。<br>由于 p.charAt(i) != p.charAt(j + 1)，j 保持 0，所以 next[2] = j = 0。<br><strong>第二次循环（i = 3，计算 next[3]）</strong><br>比较 p.charAt(3)（字符 ‘A’）和 p.charAt(1)（字符 ‘A’）。<br>因为 ‘A’ == ‘A’，所以 j++，此时 j = 1。<br>然后 next[3] = j = 1。<br><strong>第三次循环（i = 4，计算 next[4]）</strong><br>比较 p.charAt(4)（字符 ‘B’）和 p.charAt(2)（字符 ‘B’）。<br>因为 ‘B’ == ‘B’，所以 j++，此时 j = 2。<br>然后 next[4] = j = 2（这与图片里子串 next 数组中对应位置的值为 2 一致）。<br><strong>第四次循环（i = 5，计算 next[5]）</strong><br>比较 p.charAt(5)（字符 ‘C’）和 p.charAt(3)（字符 ‘A’）。<br>因为 ‘C’ != ‘A’，且 j = 2 &gt; 0，进入 while 循环，执行 j = next[j]，即 j = next[2] = 0。<br>再次比较 p.charAt(5)（’C’）和 p.charAt(1)（’A’），还是不相等，且 j = 0，while 循环结束。<br>由于 p.charAt(i) != p.charAt(j + 1)，j 保持 0，所以 next[5] = j = 0。<h2 id="在主串中匹配模式串"><a href="#在主串中匹配模式串" class="headerlink" title="在主串中匹配模式串"></a>在主串中匹配模式串</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">for (int i = 1, j = 0; i &lt;= n; i++) &#123;</span><br><span class="line">            while (j &gt; 0 &amp;&amp; s.charAt(i) != p.charAt(j + 1)) &#123;</span><br><span class="line">                j = next[j];</span><br><span class="line">            &#125;</span><br><span class="line">            if (s.charAt(i) == p.charAt(j + 1)) &#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            if (j == m) &#123;</span><br><span class="line">                return i - m;//i-m+1,但是从1开始所以要-1</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><strong>第 1 次循环：</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 1. 检查不匹配时的回溯（j=0，不满足j&gt;0，while循环不执行）</span><br><span class="line">while (j &gt; 0 &amp;&amp; s.charAt(1) != p.charAt(j + 1)) &#123;</span><br><span class="line">    j = next[j];</span><br><span class="line">&#125;</span><br><span class="line">// 2. 字符匹配判断：s[1]=&#x27;A&#x27; == p[1]=&#x27;A&#x27;（j+1=1），j自增为1</span><br><span class="line">if (s.charAt(1) == p.charAt(j + 1)) &#123;</span><br><span class="line">    j++; </span><br><span class="line">&#125;</span><br><span class="line">// 3. 检查是否完全匹配：j=1 != 7，不返回</span><br><span class="line">if (j == m) &#123;</span><br><span class="line">    return i - m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><strong>第 2 次循环：</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 1. while循环：j=1&gt;0，但s[2]=&#x27;B&#x27; == p[2]=&#x27;B&#x27;（j+1=2），循环不执行</span><br><span class="line">while (j &gt; 0 &amp;&amp; s.charAt(2) != p.charAt(j + 1)) &#123;</span><br><span class="line">    j = next[j];</span><br><span class="line">&#125;</span><br><span class="line">// 2. 字符匹配：s[2]=&#x27;B&#x27; == p[2]=&#x27;B&#x27;，j自增为2</span><br><span class="line">if (s.charAt(2) == p.charAt(j + 1)) &#123;</span><br><span class="line">    j++; </span><br><span class="line">&#125;</span><br><span class="line">// 3. 完全匹配检查：j=2 != 7，不返回</span><br><span class="line">if (j == m) &#123;</span><br><span class="line">    return i - m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><strong>第 3 次循环：</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 1. while循环：j=2&gt;0，但s[3]=&#x27;A&#x27; == p[3]=&#x27;A&#x27;（j+1=3），循环不执行</span><br><span class="line">while (j &gt; 0 &amp;&amp; s.charAt(3) != p.charAt(j + 1)) &#123;</span><br><span class="line">    j = next[j];</span><br><span class="line">&#125;</span><br><span class="line">// 2. 字符匹配：s[3]=&#x27;A&#x27; == p[3]=&#x27;A&#x27;，j自增为3</span><br><span class="line">if (s.charAt(3) == p.charAt(j + 1)) &#123;</span><br><span class="line">    j++; </span><br><span class="line">&#125;</span><br><span class="line">// 3. 完全匹配检查：j=3 != 7，不返回</span><br><span class="line">if (j == m) &#123;</span><br><span class="line">    return i - m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><strong>第 4 次循环：</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 1. while循环：j=3&gt;0，但s[4]=&#x27;B&#x27; == p[4]=&#x27;B&#x27;（j+1=4），循环不执行</span><br><span class="line">while (j &gt; 0 &amp;&amp; s.charAt(4) != p.charAt(j + 1)) &#123;</span><br><span class="line">    j = next[j];</span><br><span class="line">&#125;</span><br><span class="line">// 2. 字符匹配：s[4]=&#x27;B&#x27; == p[4]=&#x27;B&#x27;，j自增为4</span><br><span class="line">if (s.charAt(4) == p.charAt(j + 1)) &#123;</span><br><span class="line">    j++; </span><br><span class="line">&#125;</span><br><span class="line">// 3. 完全匹配检查：j=4 != 7，不返回</span><br><span class="line">if (j == m) &#123;</span><br><span class="line">    return i - m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><strong>第 5 次循环：</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 1. while循环：j=4&gt;0，且s[5]=&#x27;A&#x27; != p[5]=&#x27;C&#x27;（j+1=5），执行回溯</span><br><span class="line">while (j &gt; 0 &amp;&amp; s.charAt(5) != p.charAt(j + 1)) &#123;</span><br><span class="line">    j = next[j]; // j = next[4] = 2（根据next数组取值）</span><br><span class="line">&#125;</span><br><span class="line">// 2. 回溯后判断：s[5]=&#x27;A&#x27; == p[3]=&#x27;A&#x27;（j+1=3），j自增为3</span><br><span class="line">if (s.charAt(5) == p.charAt(j + 1)) &#123;</span><br><span class="line">    j++; </span><br><span class="line">&#125;</span><br><span class="line">// 3. 完全匹配检查：j=3 != 7，不返回</span><br><span class="line">if (j == m) &#123;</span><br><span class="line">    return i - m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><strong>第 6 次循环：</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 1. while循环：j=3&gt;0，但s[6]=&#x27;B&#x27; == p[4]=&#x27;B&#x27;（j+1=4），循环不执行</span><br><span class="line">while (j &gt; 0 &amp;&amp; s.charAt(6) != p.charAt(j + 1)) &#123;</span><br><span class="line">    j = next[j];</span><br><span class="line">&#125;</span><br><span class="line">// 2. 字符匹配：s[6]=&#x27;B&#x27; == p[4]=&#x27;B&#x27;，j自增为4</span><br><span class="line">if (s.charAt(6) == p.charAt(j + 1)) &#123;</span><br><span class="line">    j++; </span><br><span class="line">&#125;</span><br><span class="line">// 3. 完全匹配检查：j=4 != 7，不返回</span><br><span class="line">if (j == m) &#123;</span><br><span class="line">    return i - m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><strong>第 7 次循环：</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 1. while循环：j=4&gt;0，但s[7]=&#x27;C&#x27; == p[5]=&#x27;C&#x27;（j+1=5），循环不执行</span><br><span class="line">while (j &gt; 0 &amp;&amp; s.charAt(7) != p.charAt(j + 1)) &#123;</span><br><span class="line">    j = next[j];</span><br><span class="line">&#125;</span><br><span class="line">// 2. 字符匹配：s[7]=&#x27;C&#x27; == p[5]=&#x27;C&#x27;，j自增为5</span><br><span class="line">if (s.charAt(7) == p.charAt(j + 1)) &#123;</span><br><span class="line">    j++; </span><br><span class="line">&#125;</span><br><span class="line">// 3. 完全匹配检查：j=5 != 7，不返回</span><br><span class="line">if (j == m) &#123;</span><br><span class="line">    return i - m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><strong>第 8 次循环：</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 1. while循环：j=5&gt;0，但s[8]=&#x27;A&#x27; == p[6]=&#x27;A&#x27;（j+1=6），循环不执行</span><br><span class="line">while (j &gt; 0 &amp;&amp; s.charAt(8) != p.charAt(j + 1)) &#123;</span><br><span class="line">    j = next[j];</span><br><span class="line">&#125;</span><br><span class="line">// 2. 字符匹配：s[8]=&#x27;A&#x27; == p[6]=&#x27;A&#x27;，j自增为6</span><br><span class="line">if (s.charAt(8) == p.charAt(j + 1)) &#123;</span><br><span class="line">    j++; </span><br><span class="line">&#125;</span><br><span class="line">// 3. 完全匹配检查：j=6 != 7，不返回</span><br><span class="line">if (j == m) &#123;</span><br><span class="line">    return i - m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><strong>第 9 次循环：</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 1. while循环：j=6&gt;0，但s[9]=&#x27;B&#x27; == p[7]=&#x27;B&#x27;（j+1=7），循环不执行</span><br><span class="line">while (j &gt; 0 &amp;&amp; s.charAt(9) != p.charAt(j + 1)) &#123;</span><br><span class="line">    j = next[j];</span><br><span class="line">&#125;</span><br><span class="line">// 2. 字符匹配：s[9]=&#x27;B&#x27; == p[7]=&#x27;B&#x27;，j自增为7</span><br><span class="line">if (s.charAt(9) == p.charAt(j + 1)) &#123;</span><br><span class="line">    j++; </span><br><span class="line">&#125;</span><br><span class="line">// 3. 完全匹配检查：j=7 == m=7，返回i - m = 9 - 7 = 2</span><br><span class="line">if (j == m) &#123;</span><br><span class="line">    return i - m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>最终结果：返回2（对应原主串”ABABABCABA”的起始下标，即从第 3 个字符开始匹配成功）</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>李克勤院士</title>
      <link href="/posts/956e041d.html"/>
      <url>/posts/956e041d.html</url>
      
        <content type="html"><![CDATA[<h1 id="李克勤院士"><a href="#李克勤院士" class="headerlink" title="李克勤院士"></a>李克勤院士</h1><div class="tip home"><p>You get it,you get it;you don’t get it,you don’t get it.</p></div><h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><p>特别感谢Java期末出题组老师把试卷结构改了只有一道大题，让我能21分钟交卷，特别感谢我亲爱的舍友赞助的自行车能让我光速从一教赶到信息楼，10点27分及时赶上讲座！</p><h2 id="How-to-Position-Yourself"><a href="#How-to-Position-Yourself" class="headerlink" title="How to Position Yourself"></a>How to Position Yourself</h2><p>关于怎样定位自己我觉着是极其重要的，作为计算机专业，研究方向其实也就固定的几类，按照李老师的分就是Theory,Algorithm,Middleware (theory-oriented),Middleware (system-oriented)。现在当下最火的毋庸置疑就是Algorithm里的dl。非常搞笑的现状就是人人都AIAI的叫，但基本没多少人懂其到底是啥，有同学读研更是盲目，在不清楚的前提下就入坑，所以建议考虑一下自身情况，万一自己更适合系统等方向呢？再没有Passion的情况下是很难做好一件事的。还有一类人也是非常搞笑的，就是有些想要考研的，其实很多人都对自己定位不清晰，自己到底适不适合考试都不知道，未来要干啥也不知道，就想在学校的温床里躺平，延缓就业，有些甚至二战三战，不多评价，祝好！</p><h2 id="Theory-System-No"><a href="#Theory-System-No" class="headerlink" title="Theory + System? No!"></a>Theory + System? No!</h2><p>既要又要=一无所获。你既要搞研究又要申请专利又要开公司又要抢占市场又要上市，一个人根本不可能做到这些的。这就不得不提大学里面大量水的一批的竞赛了，反正自己判断吧，对自己价值有多大都心里有数，打磨内核才是硬道理。</p><h2 id="How-to-Get-into-a-Research-Area"><a href="#How-to-Get-into-a-Research-Area" class="headerlink" title="How to Get into a Research Area"></a>How to Get into a Research Area</h2><h3 id="Read-extensively-but-selectively"><a href="#Read-extensively-but-selectively" class="headerlink" title="Read extensively but selectively"></a>Read extensively but selectively</h3><p>知道自己干啥别瞎干。</p><h3 id="Find-the-research-topic-by-yourself"><a href="#Find-the-research-topic-by-yourself" class="headerlink" title="Find the research topic by yourself"></a>Find the research topic by yourself</h3><p>这个其实就多少有点意思了，其实一般来说我们高校里的科研就是导师干什么你就干什么，很少有自己选题的。李老说他当时在美国读书的时候所有研究课题都是他自己选择的，哈哈。</p><h3 id="Choose-a-topic-of-your-favorite"><a href="#Choose-a-topic-of-your-favorite" class="headerlink" title="Choose a topic of your favorite"></a>Choose a topic of your favorite</h3><p>还是Passion的问题。</p><h3 id="Choose-a-topic-that-matches-your-experience-and-capabilities"><a href="#Choose-a-topic-that-matches-your-experience-and-capabilities" class="headerlink" title="Choose a topic that matches your experience and capabilities"></a>Choose a topic that matches your experience and capabilities</h3><p>还是自我定位</p><h3 id="Learn-the-background-knowledge-and-skills-only-when-necessary"><a href="#Learn-the-background-knowledge-and-skills-only-when-necessary" class="headerlink" title="Learn the background knowledge and skills only when necessary"></a>Learn the background knowledge and skills only when necessary</h3><p>必须得这样。</p><h3 id="Do-not-rely-on-your-supervisor"><a href="#Do-not-rely-on-your-supervisor" class="headerlink" title="Do not rely on your supervisor"></a>Do not rely on your supervisor</h3><p>青出于蓝而胜于蓝不是没有道理的。李老师说当年他美国的导师是助理教授，把他送走后就立马成了副教授，因此李老师帮导师评上了副教授，结果几十年过去了，李老师不断攀登，而他导师还是副教授。。。</p><h3 id="Do-not-switch-areas"><a href="#Do-not-switch-areas" class="headerlink" title="Do not switch areas"></a>Do not switch areas</h3><p>换来换去就完蛋了！</p><h2 id="How-to-Find-an-Original-Idea"><a href="#How-to-Find-an-Original-Idea" class="headerlink" title="How to Find an Original Idea"></a>How to Find an Original Idea</h2><p>怎么找创新点？</p><h3 id="Scientific-research-is-an-individual-and-creative-process"><a href="#Scientific-research-is-an-individual-and-creative-process" class="headerlink" title="Scientific research is an individual and creative process"></a>Scientific research is an individual and creative process</h3><p>科学研究是一个人发挥创造性的过程，这个我非常认同李老师的观点，李老师说他不理解为什么现在文章都是五六个作者甚至十几个作者，创新点不就是一个人想出来的吗还能是一人想n分之1吗。要是其他人说可信度还没那么高，但是李老师的确毋庸置疑，200多篇独立作者发布的文章，恐怖如斯。老师还自嘲说一千多篇剩下的八百多篇共同作者的都是腐败出来的，哈哈。其实有时候不是独立作者发布文章还会产生一些纠纷比如杨振宁李政道两位老先生的决裂。</p><h3 id="You-get-it-you-get-it-you-don’t-get-it-you-don’t-get-it"><a href="#You-get-it-you-get-it-you-don’t-get-it-you-don’t-get-it" class="headerlink" title="You get it, you get it; you don’t get it, you don’t get it"></a>You get it, you get it; you don’t get it, you don’t get it</h3><p>这个是李老师读博的时候和一个他钦慕的导师聊天时，李老师问怎么找创新点，这个学者给的回答，很哲学但也正确，有就有，没就没，就这么简单。</p><h3 id="You-should-not-rely-on-others"><a href="#You-should-not-rely-on-others" class="headerlink" title="You should not rely on others"></a>You should not rely on others</h3><p>不只学术上，方方面面如此，关键时刻谁都没你自己靠谱。</p><h3 id="There-is-no-standard-process"><a href="#There-is-no-standard-process" class="headerlink" title="There is no standard process"></a>There is no standard process</h3><p>路都是自己探索出来的，其实没必要畏缩，多试错才能有成长。</p><h3 id="There-is-no-shortcut"><a href="#There-is-no-shortcut" class="headerlink" title="There is no shortcut"></a>There is no shortcut</h3><p>脚踏实地。</p><h3 id="Every-paper-is-not-easy-to-publish"><a href="#Every-paper-is-not-easy-to-publish" class="headerlink" title="Every paper is not easy to publish"></a>Every paper is not easy to publish</h3><p>坚持。</p><h2 id="How-to-Make-Research-Deeper-and-Wider"><a href="#How-to-Make-Research-Deeper-and-Wider" class="headerlink" title="How to Make Research Deeper and Wider"></a>How to Make Research Deeper and Wider</h2><h3 id="You-must-think-deeply-and-uninterruptedly-with-concentration"><a href="#You-must-think-deeply-and-uninterruptedly-with-concentration" class="headerlink" title="You must think deeply and uninterruptedly with concentration"></a>You must think deeply and uninterruptedly with concentration</h3><p>专注。</p><h3 id="New-ideas-may-come-unexpectedly-but-not-surprisingly"><a href="#New-ideas-may-come-unexpectedly-but-not-surprisingly" class="headerlink" title="New ideas may come unexpectedly, but not surprisingly"></a>New ideas may come unexpectedly, but not surprisingly</h3><p>山重水复疑无路，柳暗花明又一村。</p><h3 id="The-first-idea-is-the-most-difficult-to-obtain"><a href="#The-first-idea-is-the-most-difficult-to-obtain" class="headerlink" title="The first idea is the most difficult to obtain"></a>The first idea is the most difficult to obtain</h3><p>万事开头难。</p><h3 id="Usually-more-and-deeper-ideas-will-come-when-you-write-a-paper"><a href="#Usually-more-and-deeper-ideas-will-come-when-you-write-a-paper" class="headerlink" title="Usually more and deeper ideas will come when you write a paper"></a>Usually more and deeper ideas will come when you write a paper</h3><p>递进。</p><h3 id="More-papers-more-ideas"><a href="#More-papers-more-ideas" class="headerlink" title="More papers, more ideas"></a>More papers, more ideas</h3><p>菜就多练。</p><h3 id="New-Problems-old-methods"><a href="#New-Problems-old-methods" class="headerlink" title="New Problems, old methods"></a>New Problems, old methods</h3><p>变与不变。</p><h3 id="New-research-areas-can-be-opened-more-easily-with-more-experience"><a href="#New-research-areas-can-be-opened-more-easily-with-more-experience" class="headerlink" title="New research areas can be opened more easily with more experience"></a>New research areas can be opened more easily with more experience</h3><p>其实也不一定要一味追求热门潮流，在自己领域深耕也是不错的选择。</p><h2 id="发表单作论文的条件"><a href="#发表单作论文的条件" class="headerlink" title="发表单作论文的条件"></a>发表单作论文的条件</h2><h3 id="能力-对资深学者是一个挑战"><a href="#能力-对资深学者是一个挑战" class="headerlink" title="能力(对资深学者是一个挑战)"></a>能力(对资深学者是一个挑战)</h3><p>因为有时候屁事一大堆，所以有些学者没法concentrate on。</p><h3 id="勇气-对青年学者是一个挑战"><a href="#勇气-对青年学者是一个挑战" class="headerlink" title="勇气(对青年学者是一个挑战)"></a>勇气(对青年学者是一个挑战)</h3><p>这挑战也是有点大。</p><h3 id="动力-梦想-目标-信念-追求-执着-激情"><a href="#动力-梦想-目标-信念-追求-执着-激情" class="headerlink" title="动力(梦想+目标+信念+追求+执着+激情)"></a>动力(梦想+目标+信念+追求+执着+激情)</h3><p>甭管能不能做到反正发表单作论文应该是每个学术研究者的ultimate goal!<br>Passion是李老师一直在强调的，干什么事没有激情都很难持续，更别提做好了。</p><h2 id="大师"><a href="#大师" class="headerlink" title="大师"></a>大师</h2><p>在36年间（1989-2025），共发表了1,130篇论文，年均31篇。在35年间（1989-2024），其中245篇论文为单独或第一作者，年均7篇。这里李老师举了个非常有意思的例子，就是我们甚至不用自己创新，找现成论文直接代码复现然后用latex敲出来一年能做到七篇吗？哈哈。真大师。</p><h2 id="Time-Management"><a href="#Time-Management" class="headerlink" title="Time Management"></a>Time Management</h2><ul><li><p><strong>Set long-, mid-, short-term plans and goals</strong>  </p></li><li><p><strong>Set milestones</strong>  </p></li><li><p><strong>Set priorities</strong>  </p></li></ul><p>就比如我要想准时来听李老师讲座我就必须在25分钟内写完Java考试卷，然后还要借辆自行车才能赶到，其实还少考虑了一个事情就是去的晚可能就没座位了。我还发现个可怕的事实，我上大学除了这次外我从来没干过时间规划。</p><h2 id="人生楷模"><a href="#人生楷模" class="headerlink" title="人生楷模"></a>人生楷模</h2><p>这两位是李老师的楷模那更是我们的楷模。</p><h3 id="董韫美院士"><a href="#董韫美院士" class="headerlink" title="董韫美院士"></a>董韫美院士</h3><p>董院士是李老师在中科所读研的导师，李老说当时只要一个人但是有九个人报考，后来李老师第一把他们干掉了哈哈。董老师也是单作论文作者值得敬佩。</p><h3 id="黄凯教授"><a href="#黄凯教授" class="headerlink" title="黄凯教授"></a>黄凯教授</h3><p>最让我印象深刻的是黄老师工作到80岁回国后还去港中文任教了五年，而且黄老师独立作者出了十几本书可谓“著作等身”。而且还紧跟潮流，出新东西就会立马学习钻研，终身学习。</p><h2 id="从一而终"><a href="#从一而终" class="headerlink" title="从一而终"></a>从一而终</h2><p>李老师其实这波讲座狗粮洒满，就不说了真是秀恩爱楷模。。。不管是对科研还是爱情李老师都是从一而终的，而且李老师和夫人在教育孩子上也是极其成功的，培养了三个“藤娃”！</p><h2 id="健康第一"><a href="#健康第一" class="headerlink" title="健康第一"></a>健康第一</h2><p>其实有个老掉牙的例子就是健康是1，其他都是0，1没了就全没了，所以健康真的很重要，反复鞭策。。。</p><h2 id="QA"><a href="#QA" class="headerlink" title="QA"></a>QA</h2><p>我第一个问题就是当时的学习条件远不如现在优渥，当时您是怎么学习的？李老师的回答大概如下,Passion,有次甚至去IBM图书馆查了一天资料；第二个问题是您遇到最大的困难是什么，怎么克服的？这个李老师没有想好，回头告诉我；第三个问题是正常情况下您的一天安排是什么？这个多少涉及隐私了，但是李老师还是进行了回答，老师说一般会睡到自然醒（不熬夜），然后早上起来一般会先回复微信消息（合作的一千多人吧），比如学生的问题、论文的问题，还会直接打语音进行解答。然后就是保持高效率。</p><h2 id="Passion"><a href="#Passion" class="headerlink" title="Passion"></a>Passion</h2><p>李老师说他虽然62岁了(其实根本看不出来，声如洪钟，快两个小时的讲座全程Passion,还留着和我一样走在时尚最前沿的寸头)，但他心里认为自己至多18岁。讲真，我虽然没过十八多久但早已没年少时的锐气和Passion了，惭愧之至，希望哪天Passion之火能重燃。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>总之这是我有史以来听过最有价值的讲座，李老师幽默风趣，实力超群实为吾辈楷模！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>碎梦后繁星</title>
      <link href="/posts/af5d4fac.html"/>
      <url>/posts/af5d4fac.html</url>
      
        <content type="html"><![CDATA[<h1 id="碎梦后繁星"><a href="#碎梦后繁星" class="headerlink" title="碎梦后繁星"></a>碎梦后繁星</h1> <div class="note primary simple"><p>primary   ——The only thing you have to fear is fear itself</p></div>                           <h2 id="迷茫"><a href="#迷茫" class="headerlink" title="迷茫"></a>迷茫</h2><p>  作为大学生，不管什么专业初入大学时或多或少都会迷茫，总结一下无不归结于一个原因，对未来不确定性的恐惧。</p><h2 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h2><p>  你为什么要读研？上大学以来这句话让我印象最深，我自诩“能言善辩，巧舌如簧”，再加上我本身正直善良，所以很少有一些非知识性问题能让我沉默，但是当问出这句话的时候我沉默了，我找不出来能够自恰的答案，大一的时候我是电信专业，在电信实验室程序组的日子里不说专业知识编程能力的提高，最重要的是思想的升华，非常感谢w学长的启迪，我从清澈愚昧的大一新生蜕变成了现在的我。其实现在我还是不太好回答这个问题，首先，社会潮流所向，从研究生博士生扩招就可以看出大家都有相应需求；第二，大家普遍认为研究生毕业会有更好的工作进而有着较高的生活水平；第三，似乎大家都有名校情结，C9上清北，985上C9,211上985，双非上211；第四，你能遇见更优秀的人，甚至可以找到人生伴侣等等吧。听起来确实不错。</p><h2 id="转专业"><a href="#转专业" class="headerlink" title="转专业"></a>转专业</h2><p>为什么要转专业，核心原因是我不想上一堆实验课还有两大天书电磁场和信号系统，转计算机纯纯想轻松点。。。</p><h2 id="规划"><a href="#规划" class="headerlink" title="规划"></a>规划</h2><p>绝大部分大学生对工作是抵触的，在大学，你可以领着父母给的低保吃喝不愁，回家还能享受亲戚邻里的大学生荣耀头衔的夸赞，周末都能放假，寒暑假甚至多于小学生，再者只要你愿意你甚至可以天天放假。其实这都不是本质原因，可能更核心的大学生不愿意面对找工作这个事实的是心里对美好月薪过万生活的向往和现实月薪5000的牛马生活的矛盾，简而言之就是高不成低不就，其实找工作大学生还是很好找的，只要你不挑剔。其实说实话我是幸运的，因为我要高考成绩高点我就会去读数学专业了，为什么？当时的认知就是数学物理，有点好笑。所以有时候真的，塞翁失马，焉知非福！大家一定要有一个乐观的心态。再说下工资问题，可能除了部分计算机专业的同学本科毕业外，其他专业大概很难本科就能拿上万的薪水，所以要是其他专业的同学，也许也只有读研这一条出路了吧。</p><h3 id="就业压力大"><a href="#就业压力大" class="headerlink" title="就业压力大"></a>就业压力大</h3><p>现在大家可能都会听说过这样一句话，工作难找。我再次声明我单纯从计算机专业本科生角度来阐明一下这个问题是有多么荒唐可笑。举一个例子，一个人是高富帅，学历还好，他能做我的老婆吗？显然不行！为什么呢？因为老婆的首要条件是女性。同理，找工作也是这样啊，首要条件就是你满足公司招聘需求。那怎么看你是否满足呢，打开boss直聘或者牛客看下招聘要求，对于开发岗来说几乎清一色要求本科及以上学历，需要掌握某某某某，显然就目前情况来说，前者显然满足甚至条件还有点优越毕竟双一流，后者就分人了大部分是不合格的。然后可以大概搜一下牛客的面经看下面试问题，我想绝大部分会和我感受一样，嘛也不会，随便举个例子，大家都学过数据库吧，那我问MySQL中的MVCC是什么，不是说你不知道而是你不能很好的深入的解释出来，其实大部分可能还真不知道。那么问题就来了，如果一个985硕士去面试问的问题要么一知半解要么完全不会，换位思考作为老板你会要吗？而且研究生搞得大多是深度学习，和开发区别还是蛮大的，所以其实要求本科及以上学历的原因也就很明显了吧，其实有时候，年龄也是一个巨大的优势。一个很显然的事实就摆在面前你不合适有的是人合适，所以这就是为什么很多计算机专业本科生甚至研究生就不了业的原因（其实计算机专业进互联网行业的比例我觉着92可能平均下来可能也不到40%），是大家普遍渲染的学历焦虑吗，不是，而应该是能力欠缺。其实有趣的一点是真正适合不断深造的人能力往往能力是极强的，不管升学还是就业总会游刃有余，不会存在一般人的焦虑的，可惜大部分人选择深造是无厘头的跟风式的毫无自知之明的，问原因，学历焦虑。</p><h3 id="学历贬值"><a href="#学历贬值" class="headerlink" title="学历贬值"></a>学历贬值</h3><p>现在因为扩招所以学历贬值这个词非常流行，对于其他专业我不予置评，了解的不深入没有亲身经历时是不具备评判资格的，不过可笑的是，这一点绝大部分人都做不到，一知半解就口无遮拦，极其可笑愚昧。但是作为计算机专业我可以很负责的告诉你这四个字就是扯淡，一个很显然的事实各大厂top计划算法岗年薪百万，应届。其实作为计算机专业本科生进大厂几乎就是一些冷门专业博士毕业的价格，甚至更高，但是也不是每一个本科生都能进大厂，哈哈哈，所以说我是幸运的要不就去学数学了，可能大抵会比较崩溃，不过其实就我亲身经历而言我其实建议想搞深度学习的其实本硕都可以读数学，因为计算机自学资源太多了，而且难度老少皆宜，数学就不一样了，没有环境可能很难学下去，其实深度学习对数学要求还是蛮高的所以往往数学系的转计算机博大抵是可以乱杀科班子弟的。其实还有一个值得思考的问题，假如你选择开发，那么你大学所谓的高等数学线性代数概率统计是没有任何用处的，更别提大学物理这种和计算机风马牛不相及的科目了，如果你想深造搞算法这些也没用，因为浅尝辄止远远不够用。所以其实大学有些课程啊满足等式，上课=坐牢=浪费时间。</p><h3 id="35岁危机"><a href="#35岁危机" class="headerlink" title="35岁危机"></a>35岁危机</h3><p>现在网上比较热门的还有一个话题，“程序员的35岁危机”，很多懂哥懂姐又要开始输出了，还是别学计算机了，行业饱和了还有裁员风险，赶紧考公考编吧，铁饭碗多稳定啊。然后就开始同情被裁员的大厂程序员，年纪轻轻就失业，好悲惨。讲真，我也不知道该同情谁，你说人家没了工作，人家可能已经在北上深买房了，或者拿着攒下来的几百个w采菊东篱下悠然见南山，或者换个大厂继续卷了，而你，可能退休前也没这数，所以有时候真没必要同情别人。其实裁员很正常，我觉者分两种第一种只会增删改查写屎山的程序员，不把你优化了那些优秀的年轻人怎么进来；第二种，可能因为业务变动整个组或部门都没了，我管你优秀与否呢。显然前者失业就真失业了，后者选择权在自己。（其实有个规划找份稳定工作也挺好的）</p><h2 id="责任"><a href="#责任" class="headerlink" title="责任"></a>责任</h2><p>大学带给我最大的蜕变就是成长，但是现实确实挺悲惨的，绝大部分大学生不是选择承担，而是选择逃避。逃避就业上文已经有过阐述我就不再重复，其实大部分选择深造的也是一种逃避，因为不想就业或者没有能力就业就要选择深造，甚至未来到底要干嘛都一知半解，那么我这有几个问题，选择深造的大部分可能都给不出答案，第一，你是否适合科研或者了解过科研，其实很多科研佼佼者或者大厂top计划候选人是有着不俗的Noi和Acm成绩的，但是也有很多代码能力强的并不适合科研，所以我觉着强代码能力是科研的必要不充分条件。第二，沉没成本你能承担的起吗，这个就有两方面了，其一，科研有时候要看运气，如果你的想法和另外的一个人的重复了，早了一切顺利，晚一步所有努力付之一炬，这还是在顺利的情况下，如果不顺利，其中的艰辛可能只有本专业的能体会吧；其二，你的家庭情况，我在两个电信班和一个计科班呆过，每年贫困认证都是40%以上，所以其实有时候你的选择不一定取决于你，你还要多为父母家人考虑，更需要结合自身情况审慎定夺。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>鲁迅先生说过，“中国的青年应该有志气，要有自己的独立思想。”其实现在也许是家庭或学校教育确实存在一些问题，尤其是家庭教育，好多家长总是喜欢强迫孩子干这干那，导致很多人学傻了，失去了自己的个性，埋没了兴趣爱好和天赋，没有自己的思考和思想，人云亦云；他还强调，“青年最要紧的是勇于探索，不怕吃苦。”技术在不断更迭变化，我们恰好是计算机专业，与时代同频共振，所以要与时俱进，勇于探索新知识和新领域，不怕面对困难和挑战；并且，他进一步指出，“青年人要做一个有用的人，不要只做一个看热闹的人。”我们绝非旧时代的残党，而是要开创新时代的人，我们要勇敢追求自己的理想，并为社会做出贡献。即使是点点星光，最终也会汇聚成辉煌的光芒，只要我们年轻一代心怀梦想，不断拼搏，祖国将在我们的建设下崛起，我们的生活也会越来越美好。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/css/coin.css"/>
      <url>/css/coin.css</url>
      
        <content type="html"><![CDATA[.tip-button {    border: 0;    border-radius: 0.25rem;    cursor: pointer;    font-size: 20px;    font-weight: 600;    height: 2.6rem;    margin-bottom: -4rem;    outline: 0;    position: relative;    top: 0;    transform-origin: 0% 100%;    transition: transform 50ms ease-in-out;    width: auto;    -webkit-tap-highlight-color: transparent;  }  .tip-button:active {    transform: rotate(4deg);  }  .tip-button.clicked {    animation: 150ms ease-in-out 1 shake;    pointer-events: none;  }  .tip-button.clicked .tip-button__text {    opacity: 0;    transition: opacity 100ms linear 200ms;  }  .tip-button.clicked::before {    height: 0.5rem;    width: 60%;    background: $button-hover-color;  }  .tip-button.clicked .coin {    transition: margin-bottom 1s linear 200ms;    margin-bottom: 0;  }  .tip-button.shrink-landing::before {    transition: width 200ms ease-in;    width: 0;  }  .tip-button.coin-landed::after {    opacity: 1;    transform: scale(1);    transform-origin: 50% 100%;  }  .tip-button.coin-landed .coin-wrapper {    background: radial-gradient(circle at 35% 97%, rgba(3, 16, 50, 0.4) 0.04rem, transparent 0.04rem), radial-gradient(circle at 45% 92%, rgba(3, 16, 50, 0.4) 0.04rem, transparent 0.02rem), radial-gradient(circle at 55% 98%, rgba(3, 16, 50, 0.4) 0.04rem, transparent 0.04rem), radial-gradient(circle at 65% 96%, rgba(3, 16, 50, 0.4) 0.06rem, transparent 0.06rem);    background-position: center bottom;    background-size: 100%;    bottom: -1rem;    opacity: 0;    transform: scale(2) translateY(-10px);  }  .tip-button__text {    color: #fff;    margin-right: 1.8rem;    opacity: 1;    position: relative;    transition: opacity 100ms linear 500ms;    z-index: 3;  }  .tip-button::before {    border-radius: 0.25rem;    bottom: 0;    content: '';    display: block;    height: 100%;    left: 50%;    position: absolute;    transform: translateX(-50%);    transition: height 250ms ease-in-out 400ms, width 250ms ease-in-out 300ms;    width: 100%;    z-index: 2;  }  .tip-button::after {    bottom: -1rem;    color: white;    content: 'ヾ(≧O≦)〃嗷~'; /*点击后显示的内容*/    height: 110%;    left: 0;    opacity: 0;    position: absolute;    pointer-events: none;    text-align: center;    transform: scale(0);    transform-origin: 50% 20%;    transition: transform 200ms cubic-bezier(0, 0, 0.35, 1.43);    width: 100%;    z-index: 1;  }    .coin-wrapper {    background: none;    bottom: 0;    height: 18rem;    left: 0;    opacity: 1;    overflow: hidden;    pointer-events: none;    position: absolute;    transform: none;    transform-origin: 50% 100%;    transition: opacity 200ms linear 100ms, transform 300ms ease-out;    width: 100%;  }    .coin {    --front-y-multiplier: 0;    --back-y-multiplier: 0;    --coin-y-multiplier: 0;    --coin-x-multiplier: 0;    --coin-scale-multiplier: 0;    --coin-rotation-multiplier: 0;    --shine-opacity-multiplier: 0.4;    --shine-bg-multiplier: 50%;    bottom: calc(var(--coin-y-multiplier) * 1rem - 3.5rem);    height: 3.5rem;    margin-bottom: 3.05rem;    position: absolute;    right: calc(var(--coin-x-multiplier) * 34% + 16%);    transform: translateX(50%) scale(calc(0.4 + var(--coin-scale-multiplier))) rotate(calc(var(--coin-rotation-multiplier) * -1deg));    transition: opacity 100ms linear 200ms;    width: 3.5rem;    z-index: 3;  }  .coin__front, .coin__middle, .coin__back, .coin::before, .coin__front::after, .coin__back::after {    border-radius: 50%;    box-sizing: border-box;    height: 100%;    left: 0;    position: absolute;    width: 100%;    z-index: 3;  }  .coin__front {    background: radial-gradient(circle at 50% 50%, transparent 50%, rgba(115, 124, 153, 0.4) 54%, #c2cadf 54%), linear-gradient(210deg, #8590b3 32%, transparent 32%), linear-gradient(150deg, #8590b3 32%, transparent 32%), linear-gradient(to right, #8590b3 22%, transparent 22%, transparent 78%, #8590b3 78%), linear-gradient(to bottom, #fcfaf9 44%, transparent 44%, transparent 65%, #fcfaf9 65%, #fcfaf9 71%, #8590b3 71%), linear-gradient(to right, transparent 28%, #fcfaf9 28%, #fcfaf9 34%, #8590b3 34%, #8590b3 40%, #fcfaf9 40%, #fcfaf9 47%, #8590b3 47%, #8590b3 53%, #fcfaf9 53%, #fcfaf9 60%, #8590b3 60%, #8590b3 66%, #fcfaf9 66%, #fcfaf9 72%, transparent 72%);    background-color: #8590b3;    background-size: 100% 100%;    transform: translateY(calc(var(--front-y-multiplier) * 0.3181818182rem / 2)) scaleY(var(--front-scale-multiplier));  }  .coin__front::after {    background: rgba(0, 0, 0, 0.2);    content: '';    opacity: var(--front-y-multiplier);  }  .coin__middle {    background: #737c99;    transform: translateY(calc(var(--middle-y-multiplier) * 0.3181818182rem / 2)) scaleY(var(--middle-scale-multiplier));  }  .coin__back {    background: radial-gradient(circle at 50% 50%, transparent 50%, rgba(115, 124, 153, 0.4) 54%, #c2cadf 54%), radial-gradient(circle at 50% 40%, #fcfaf9 23%, transparent 23%), radial-gradient(circle at 50% 100%, #fcfaf9 35%, transparent 35%);    background-color: #8590b3;    background-size: 100% 100%;    transform: translateY(calc(var(--back-y-multiplier) * 0.3181818182rem / 2)) scaleY(var(--back-scale-multiplier));  }  .coin__back::after {    background: rgba(0, 0, 0, 0.2);    content: '';    opacity: var(--back-y-multiplier);  }  .coin::before {    background: radial-gradient(circle at 25% 65%, transparent 50%, rgba(255, 255, 255, 0.9) 90%), linear-gradient(55deg, transparent calc(var(--shine-bg-multiplier) + 0%), #e9f4ff calc(var(--shine-bg-multiplier) + 0%), transparent calc(var(--shine-bg-multiplier) + 50%));    content: '';    opacity: var(--shine-opacity-multiplier);    transform: translateY(calc(var(--middle-y-multiplier) * 0.3181818182rem / -2)) scaleY(var(--middle-scale-multiplier)) rotate(calc(var(--coin-rotation-multiplier) * 1deg));    z-index: 10;  }  .coin::after {    background: #737c99;    content: '';    height: 0.3181818182rem;    left: 0;    position: absolute;    top: 50%;    transform: translateY(-50%);    width: 100%;    z-index: 2;  }    @keyframes shake {    0% {      transform: rotate(4deg);    }    66% {      transform: rotate(-4deg);    }    100% {      transform: rotate();    }  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* @font-face {  font-family: Candyhome;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */@font-face {    font-family: ZhuZiAYuanJWD;    src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2);    font-display: swap;    font-weight: lighter;  }    div#menus {    font-family: "ZhuZiAYuanJWD";  }  h1#site-title {    font-family: ZhuZiAYuanJWD;    font-size: 3em !important;  }  a.article-title,  a.blog-slider__title,  a.categoryBar-list-link,  h1.post-title {    font-family: ZhuZiAYuanJWD;  }    .iconfont {    font-family: "iconfont" !important;    font-size: 3em;    /* 可以定义图标大小 */    font-style: normal;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;  }    /* 时间轴生肖icon */  svg.icon {    /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */    width: 1em;    height: 1em;    /* width和height定义图标的默认宽度和高度*/    vertical-align: -0.15em;    fill: currentColor;    overflow: hidden;  }    .icon-zhongbiao::before {    color: #f7c768;  }    /* bilibli番剧插件 */  #article-container .bangumi-tab.bangumi-active {    background: var(--anzhiyu-theme);    color: var(--anzhiyu-ahoverbg);    border-radius: 10px;  }  a.bangumi-tab:hover {    text-decoration: none !important;  }  .bangumi-button:hover {    background: var(--anzhiyu-theme) !important;    border-radius: 10px !important;    color: var(--anzhiyu-ahoverbg) !important;  }  a.bangumi-button.bangumi-nextpage:hover {    text-decoration: none !important;  }  .bangumi-button {    padding: 5px 10px !important;  }    a.bangumi-tab {    padding: 5px 10px !important;  }  svg.icon.faa-tada {    font-size: 1.1em;  }  .bangumi-info-item {    border-right: 1px solid #f2b94b;  }  .bangumi-info-item span {    color: #f2b94b;  }  .bangumi-info-item em {    color: #f2b94b;  }    /* 解决artitalk的图标问题 */  #uploadSource > svg {    width: 1.19em;    height: 1.5em;  }    /*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */  #page-header:not(.not-top-img):before {    background-color: transparent !important;  }    /* 首页文章卡片 */  #recent-posts > .recent-post-item {    background: rgba(255, 255, 255, 0.9);  }    /* 首页侧栏卡片 */  #aside-content .card-widget {    background: rgba(255, 255, 255, 0.9);  }    /* 文章页面正文背景 */  div#post {    background: rgba(255, 255, 255, 0.9);  }    /* 分页页面 */  div#page {    background: rgba(255, 255, 255, 0.9);  }    /* 归档页面 */  div#archive {    background: rgba(255, 255, 255, 0.9);  }    /* 标签页面 */  div#tag {    background: rgba(255, 255, 255, 0.9);  }    /* 分类页面 */  div#category {    background: rgba(255, 255, 255, 0.9);  }    /*夜间模式伪类遮罩层透明*/  [data-theme="dark"] #recent-posts > .recent-post-item {    background: #121212;  }    [data-theme="dark"] .card-widget {    background: #121212 !important;  }    [data-theme="dark"] div#post {    background: #121212 !important;  }    [data-theme="dark"] div#tag {    background: #121212 !important;  }    [data-theme="dark"] div#archive {    background: #121212 !important;  }    [data-theme="dark"] div#page {    background: #121212 !important;  }    [data-theme="dark"] div#category {    background: #121212 !important;  }    [data-theme="dark"] div#category {    background: transparent !important;  }  /* 页脚透明 */  #footer {    background: transparent !important;  }    /* 头图透明 */  #page-header {    background: transparent !important;  }    #rightside > div > button {    border-radius: 5px;  }    /* 滚动条 */    ::-webkit-scrollbar {    width: 10px;    height: 10px;  }    ::-webkit-scrollbar-thumb {    background-color: #3b70fc;    border-radius: 2em;  }    ::-webkit-scrollbar-corner {    background-color: transparent;  }    ::-moz-selection {    color: #fff;    background-color: #3b70fc;  }    /* 音乐播放器 */    /* .aplayer .aplayer-lrc {    display: none !important;  } */    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {    left: -66px !important;    transition: all 0.3s;    /* 默认情况下缩进左侧66px，只留一点箭头部分 */  }    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {    left: 0 !important;    transition: all 0.3s;    /* 鼠标悬停是左侧缩进归零，完全显示按钮 */  }    .aplayer.aplayer-fixed {    z-index: 999999 !important;  }    /* 评论框  */  .vwrap {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 30px 0px;  }    /* 设置评论框 */    .vcard {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 0px 0px;  }    /* md网站下划线 */  #article-container a:hover {    text-decoration: none !important;  }    #article-container #hpp_talk p img {    display: inline;  }    /* 404页面 */  #error-wrap {    position: absolute;    top: 40%;    right: 0;    left: 0;    margin: 0 auto;    padding: 0 1rem;    max-width: 1000px;    transform: translate(0, -50%);  }    #error-wrap .error-content {    display: flex;    flex-direction: row;    justify-content: center;    align-items: center;    margin: 0 1rem;    height: 18rem;    border-radius: 8px;    background: var(--card-bg);    box-shadow: var(--card-box-shadow);    transition: all 0.3s;  }    #error-wrap .error-content .error-img {    box-flex: 1;    flex: 1;    height: 100%;    border-top-left-radius: 8px;    border-bottom-left-radius: 8px;    background-color: #3b70fc;    background-position: center;    background-size: cover;  }    #error-wrap .error-content .error-info {    box-flex: 1;    flex: 1;    padding: 0.5rem;    text-align: center;    font-size: 14px;    font-family: Titillium Web, "PingFang SC", "Hiragino Sans GB", "Microsoft JhengHei", "Microsoft YaHei", sans-serif;  }  #error-wrap .error-content .error-info .error_title {    margin-top: -4rem;    font-size: 9em;  }  #error-wrap .error-content .error-info .error_subtitle {    margin-top: -3.5rem;    word-break: break-word;    font-size: 1.6em;  }  #error-wrap .error-content .error-info a {    display: inline-block;    margin-top: 0.5rem;    padding: 0.3rem 1.5rem;    background: var(--btn-bg);    color: var(--btn-color);  }    #body-wrap.error .aside-list {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    bottom: 0px;    position: absolute;    padding: 1rem;    width: 100%;    overflow: scroll;  }    #body-wrap.error .aside-list .aside-list-group {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    max-width: 1200px;    margin: 0 auto;  }    #body-wrap.error .aside-list .aside-list-item {    padding: 0.5rem;  }    #body-wrap.error .aside-list .aside-list-item img {    width: 100%;    object-fit: cover;    border-radius: 12px;  }    #body-wrap.error .aside-list .aside-list-item .thumbnail {    overflow: hidden;    width: 230px;    height: 143px;    background: var(--anzhiyu-card-bg);    display: flex;  }    #body-wrap.error .aside-list .aside-list-item .content .title {    -webkit-line-clamp: 2;    overflow: hidden;    display: -webkit-box;    -webkit-box-orient: vertical;    line-height: 1.5;    justify-content: center;    align-items: flex-end;    align-content: center;    padding-top: 0.5rem;    color: white;  }    #body-wrap.error .aside-list .aside-list-item .content time {    display: none;  }    /* 代码框主题 */  #article-container figure.highlight {    border-radius: 10px;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/ali_font.js"/>
      <url>/js/ali_font.js</url>
      
        <content type="html"><![CDATA[!(function (c) {    var l,      h,      a,      t,      i,      v =        '<svg><symbol id="icon-dragon_chen" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-498.122105 265.620211L431.157895 754.526316V485.052632h-66.074948c-14.470737 110.645895-44.355368 197.066105-102.696421 260.742736l-39.747368-36.432842C306.526316 617.876211 323.368421 462.901895 323.368421 242.526316V215.578947h377.263158v53.894737H377.182316c-0.404211 58.260211-2.209684 112.128-6.359579 161.684211H700.631579v53.894737h-122.152421a481.172211 481.172211 0 0 0 76.826947 119.70021l66.479158-39.855158 27.728842 46.214737-54.460631 32.687158c29.507368 24.953263 63.757474 45.675789 102.80421 58.098526l-16.303158 51.361684c-134.224842-42.711579-222.773895-167.073684-261.551158-268.207157H485.052632v221.857684l68.985263-41.391158 27.728842 46.214737-109.783579 65.886316zM646.736842 377.263158h-215.578947v-53.894737h215.578947v53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-dog_xu" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-375.592421 150.393263c33.684211 44.544 75.210105 74.698105 124.739369 90.812632l11.425684 3.718737 10.401684-6.009264C781.204211 727.740632 808.421053 622.565053 808.421053 592.842105h-53.894737c0 22.069895-19.132632 80.869053-33.711158 103.504842-34.816-14.605474-64.538947-39.262316-89.249684-74.13221 48.316632-55.269053 92.079158-117.328842 120.535579-179.900632l-49.044211-22.285473c-23.767579 52.250947-59.742316 104.717474-100.055579 152.656842-24.010105-50.930526-41.148632-115.927579-51.658105-195.395369H700.631579v-53.894737h-155.189895A1848.050526 1848.050526 0 0 1 538.947368 161.684211h-53.894736c0 58.206316 2.155789 112.074105 6.494315 161.68421H323.368421v26.947368c0 216.549053-13.177263 263.545263-100.702316 359.046737l39.747369 36.432842c63.326316-69.093053 92.806737-118.272 105.714526-206.848H485.052632v-53.894736h-111.319579a1742.147368 1742.147368 0 0 0 3.449263-107.789474h120.158316c12.611368 98.250105 35.031579 177.475368 67.395368 238.187789-61.978947 65.536-128.053895 117.975579-173.298526 142.282106l25.519158 47.481263c47.589053-25.573053 114.095158-77.446737 177.55621-142.821053z m125.170526-411.971368l-80.842105-80.842106-38.103579 38.103579 80.842105 80.842106 38.103579-38.103579z" fill="#231F20" ></path></symbol><symbol id="icon-dog" viewBox="0 0 1024 1024"><path d="M894.814316 904.434526l83.240421-183.134315-13.824-13.204211c-0.485053-0.458105-45.648842-47.589053-47.939369-185.263158-0.134737-7.922526-0.134737-33.953684-0.134736-55.996631-30.693053 15.306105-70.090105 19.887158-106.09179 19.887157-92.752842 0-163.624421-23.983158-210.647579-71.275789a192.512 192.512 0 0 1-27.944421-36.513684H377.263158v377.263158c342.662737 0 403.105684 51.092211 494.592 128.377263 7.922526 6.682947 15.521684 13.312 22.959158 19.86021z" fill="#85C3DE" ></path><path d="M326.063158 282.947368c0 34.250105-13.231158 44.463158-29.642105 44.463158s-29.642105-10.213053-29.642106-44.463158c0-34.223158 13.231158-44.463158 29.642106-44.463157s29.642105 10.24 29.642105 44.463157zM269.473684 430.295579v311.646316L190.275368 916.210526h59.203369L323.368421 753.637053V377.263158h-26.947368c-119.403789 0-172.732632-53.382737-185.505685-107.789474h35.624421c51.092211 0 68.581053-15.764211 120.535579-62.544842 12.773053-11.506526 28.079158-25.276632 47.023158-41.741474l18.351158-15.952842-69.658947-99.139368-44.085895 30.989474 41.768421 59.472842c-11.183158 9.862737-20.884211 18.593684-29.480421 26.327579C180.736 212.156632 176.235789 215.578947 146.539789 215.578947H53.894737v26.947369c0 88.710737 66.910316 178.149053 215.578947 187.769263z m216.710737-161.414737c2.290526 71.733895 28.698947 136.326737 75.048421 182.918737C618.711579 509.628632 702.437053 538.947368 810.091789 538.947368c18.593684 0 36.190316-1.158737 52.628211-3.449263 3.745684 111.265684 33.630316 170.334316 51.496421 196.015158l-38.507789 84.722526C782.174316 742.049684 688.774737 700.631579 377.263158 700.631579v53.894737c34.277053 0 65.697684 0.512 94.639158 1.509052L374.595368 970.105263h59.203369l96.013474-211.240421c66.182737 4.338526 117.005474 11.829895 157.911578 22.016L626.229895 916.210526h59.176421l54.16421-119.134315c47.616 18.405053 79.737263 42.091789 113.125053 69.739789L805.753263 970.105263h59.203369l113.071157-248.778105-13.824-13.204211c-0.485053-0.458105-45.648842-47.589053-47.939368-185.263158C985.168842 498.553263 1024 447.811368 1024 377.263158c0-95.205053-66.506105-161.684211-161.684211-161.684211v53.894737c65.482105 0 107.789474 42.307368 107.789474 107.789474 0 89.088-87.013053 107.789474-160.013474 107.789474-92.752842 0-163.624421-23.983158-210.647578-71.27579-30.315789-30.504421-45.891368-65.832421-53.35579-98.735158 11.210105 6.952421 22.932211 13.338947 35.274105 19.186527l23.04-48.720843c-92.106105-43.654737-148.992-128.646737-219.243789-243.981473l-46.026105 28.05221c49.448421 81.246316 92.968421 148.506947 147.051789 199.302737z" fill="#231F20" ></path></symbol><symbol id="icon-goat" viewBox="0 0 1024 1024"><path d="M548.378947 646.736842a952.32 952.32 0 0 1 140.90779-161.68421H107.789474c0 107.600842 0 107.600842-63.649685 169.283368l-13.069473 12.665263L66.721684 754.526316h417.172211c20.345263-41.472 43.654737-77.446737 64.485052-107.789474z" fill="#F7C768" ></path><path d="M608.256 144.734316C555.762526 115.577263 506.098526 107.789474 485.052632 107.789474V53.894737c32.579368 0 91.270737 11.452632 149.369263 43.735579 75.290947 41.822316 130.694737 94.531368 171.385263 150.878316C755.873684 288.013474 697.101474 323.368421 646.736842 323.368421h-107.789474v-53.894737h107.789474c20.506947 0 48.424421-11.210105 80.437895-31.285895a471.04 471.04 0 0 0-118.918737-93.453473zM832.673684 342.231579c-16.384 0-29.642105 10.24-29.642105 44.463158 0 34.250105 13.231158 44.463158 29.642105 44.463158s29.642105-10.213053 29.642105-44.463158c0-34.223158-13.231158-44.463158-29.642105-44.463158zM1024 619.789474C1024 347.109053 901.066105 122.448842 686.753684 3.395368l-26.165895 47.104C914.324211 191.461053 964.688842 440.400842 969.647158 592.842105h-84.506947c-17.92-35.624421-45.352421-69.12-87.013053-101.995789l-16.788211-13.285053-16.734315 13.392842c-66.128842 52.897684-134.629053 127.083789-187.311158 209.677474H102.965895l-8.272842-20.318316C159.043368 617.013895 161.684211 603.109053 161.684211 485.052632v-53.894737h485.052631v-53.894737H161.684211c0-80.384 14.309053-110.026105 66.586947-137.916632l-25.384421-47.535158C123.365053 234.226526 107.789474 291.920842 107.789474 377.263158v107.789474c0 107.600842 0 107.600842-63.649685 169.283368l-13.069473 12.665263L110.618947 862.315789h58.206316l-43.897263-107.789473h103.477895l43.897263 107.789473h58.206316l-43.897263-107.789473h259.47621C508.981895 824.939789 485.052632 899.152842 485.052632 970.105263h53.894736c0-68.688842 27.270737-144.060632 68.958316-215.578947H687.157895c7.410526 0 13.473684 6.063158 13.473684 13.473684V862.315789h53.894737v-94.315789c0-37.160421-30.208-67.368421-67.368421-67.368421h-44.65179c40.771368-58.017684 89.438316-111.427368 138.913684-153.626947C841.512421 600.037053 862.315789 655.225263 862.315789 754.526316h53.894737c0-38.912-2.748632-74.482526-11.102315-107.789474H1024v-26.947368z" fill="#231F20" ></path></symbol><symbol id="icon-goat_wei" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 50.202947c52.304842 70.925474 136.973474 152.144842 232.528843 190.383158l19.994947-50.041263c-109.271579-43.708632-202.805895-152.629895-238.780632-217.49221H808.421053v-53.894737H538.947368v-53.894737h215.578948v-53.894737h-215.578948V161.684211h-53.894736v161.68421h-215.578948v53.894737h215.578948v53.894737H215.578947v53.894737h255.757474c-35.974737 64.862316-129.536 173.783579-238.807579 217.49221l20.021895 50.041263c95.528421-38.238316 180.197053-119.484632 232.501895-190.383158V808.421053h53.894736v-246.218106z" fill="#231F20" ></path></symbol><symbol id="icon-dragon" viewBox="0 0 1024 1024"><path d="M366.376421 344.441263l152.980211-152.98021c43.142737-43.142737 141.204211-9.216 270.201263 115.738947-15.225263 9.835789-25.114947 15.818105-44.13979 32.256s-38.076632 35.489684-59.418947 56.832c-4.203789 4.203789-51.173053 53.221053-78.740211 82.027789-10.805895-12.126316-22.743579-24.171789-34.654315-36.082526L493.136842 362.792421l-54.218105 54.218105-72.542316-72.569263zM862.315789 512c0 46.834526-45.352421 80.842105-107.789473 80.842105-108.948211 0-189.359158-28.806737-267.129263-56.697263C414.100211 509.871158 344.872421 485.052632 258.182737 485.052632 80.788211 485.052632 0 588.126316 0 683.897263h53.894737C73.216 659.779368 135.302737 646.736842 177.340632 646.736842c77.338947 0 223.124211 23.282526 291.893894 47.912421C547.462737 722.701474 615.989895 754.526316 734.315789 754.526316 862.315789 754.526316 916.210526 670.315789 916.210526 512h-53.894737z" fill="#FF8787" ></path><path d="M552.421053 1024c-69.766737 0-113.825684-13.958737-156.402527-27.459368-54.487579-17.273263-110.807579-35.004632-232.421052-26.516211l-3.826527-53.733053c131.718737-9.458526 195.934316 10.967579 252.52379 28.887579 42.226526 13.365895 78.686316 24.926316 140.126316 24.926316 92.752842 0 148.210526-57.936842 148.210526-113.960421 0-16.949895-5.524211-101.618526-114.634105-101.618526-64.970105 0-112.747789 23.336421-163.328 48.02021C365.325474 830.571789 300.301474 862.315789 204.288 862.315789 85.908211 862.315789 0 787.294316 0 683.897263 0 588.126316 80.788211 485.052632 258.182737 485.052632c86.689684 0 155.917474 24.818526 229.214316 51.09221 45.810526 16.410947 92.564211 33.172211 145.488842 44.166737 9.000421-7.033263 13.850947-16.276211 13.850947-26.758737 0-37.187368-37.672421-74.859789-74.13221-111.265684l-3.287579-3.287579 38.103579-38.103579 3.260631 3.287579C652.853895 446.275368 700.631579 494.026105 700.631579 553.552842c0 12.719158-2.802526 24.926316-7.976421 36.109474A594.997895 594.997895 0 0 0 754.526316 592.842105c62.437053 0 107.789474-34.007579 107.789473-80.842105 0-58.853053-52.870737-110.268632-108.840421-164.702316l-8.057263-7.841684c-19.024842 16.437895-38.076632 35.489684-59.418947 56.832l-38.103579-38.103579c74.805895-74.832842 134.898526-134.898526 268.314947-141.931789V55.619368c-63.407158 7.787789-120.993684 39.424-121.667368 39.801264l-15.818105 8.811789-14.120421-11.344842C731.701895 66.452211 709.712842 53.894737 673.684211 53.894737c-41.418105 0-74.347789 25.869474-109.190737 53.301895-26.624 20.911158-54.137263 42.549895-86.851369 53.194105L469.342316 161.684211h-69.093053l-105.525895 105.525894-38.103579-38.130526L324.015158 161.684211H161.684211V107.789474h303.104c22.231579-8.272842 43.708632-25.168842 66.398315-42.981053C569.829053 34.438737 613.618526 0 673.684211 0c48.909474 0 81.408 17.946947 110.888421 40.097684C813.702737 26.300632 877.729684 0 943.157895 0h26.947368v323.368421h-53.894737v-53.167158c-54.164211 3.098947-92.914526 15.845053-127.002947 36.675369l1.832421 1.778526C852.587789 368.505263 916.210526 430.376421 916.210526 512c0 60.928-43.708632 109.945263-107.789473 127.622737V700.631579h53.894736v-53.894737h53.894737v53.894737h53.894737v53.894737h-53.894737v53.894737h-53.894737v-53.894737h-53.894736c-29.722947 0-53.894737-24.171789-53.894737-53.894737v-53.894737c-118.325895 0-207.063579-31.797895-285.318737-59.877053C400.437895 562.229895 335.494737 538.947368 258.182737 538.947368 117.059368 538.947368 53.894737 611.732211 53.894737 683.897263 53.894737 757.221053 115.738947 808.421053 204.288 808.421053c11.910737 0 23.228632-0.538947 34.034526-1.536C248.454737 796.321684 269.473684 770.640842 269.473684 739.166316c0-33.118316-43.088842-70.979368-58.152421-81.596632l30.935579-44.139789c8.299789 5.793684 81.111579 58.664421 81.111579 125.736421 0 19.429053-4.527158 37.052632-10.994526 52.304842 30.773895-10.051368 58.314105-23.498105 86.662737-37.349053C452.877474 727.848421 508.577684 700.631579 585.997474 700.631579 702.410105 700.631579 754.526316 778.725053 754.526316 856.144842 754.526316 938.657684 678.912 1024 552.421053 1024z m-21.180632-623.104L493.136842 362.792421l137.889684-137.889684 38.103579 38.103579-137.889684 137.889684z m-126.760421-18.351158l-38.103579-38.103579 152.980211-152.98021 38.103579 38.103579-152.980211 152.98021z m282.004211-218.624c15.494737-9.754947 43.331368-31.447579 43.331368-31.447579-25.734737-27.809684-49.556211-33.333895-67.368421-29.07621-19.240421 4.608-37.753263 24.602947-37.753263 24.602947s42.253474 22.447158 61.790316 35.920842z" fill="#231F20" ></path></symbol><symbol id="icon-horse" viewBox="0 0 1024 1024"><path d="M776.003368 646.736842c16.599579-99.947789 43.439158-181.086316 83.213474-256.538947l6.817684-12.934737H269.473684c-36.756211 0-53.894737 54.945684-53.894737 92.05221 0 46.753684 6.656 77.527579 70.278737 176.074106l84.533895 128.269473L498.876632 646.736842h277.126736z" fill="#FFAF6E" ></path><path d="M1024 0v404.210526c0 33.333895 0 134.736842-92.079158 134.736842h-13.824l-78.362947-109.056c-22.743579 49.906526-40.340211 103.046737-53.490527 162.950737h115.092211C937.310316 592.842105 970.105263 625.637053 970.105263 661.638737c0 60.631579-69.389474 154.300632-77.312 164.75621l-43.008-32.471579C875.466105 759.861895 916.210526 693.813895 916.210526 661.638737c0-5.982316-8.919579-14.901895-14.901894-14.901895h-125.332211C761.128421 736.121263 754.526316 840.569263 754.526316 970.105263h-53.894737c0-283.971368 31.097263-453.605053 110.888421-605.049263l20.318316-38.534737 112.801684 156.995369c14.443789-4.419368 25.465263-20.938105 25.465263-79.306106V0h53.894737z m-161.684211 161.684211h53.894737V0h-53.894737v80.842105c-17.381053-14.955789-38.184421-26.947368-80.842105-26.947368h-134.736842v53.894737h134.736842c37.672421 0 80.842105 40.906105 80.842105 53.894737z m-107.789473 0h-215.578948v53.894736h161.684211l53.894737-53.894736zM300.894316 766.544842L400.680421 916.210526h64.754526l-95.043368-142.551579L498.876632 646.736842h167.855157a1212.631579 1212.631579 0 0 1 9.431579-53.894737h-199.383579l-175.885473 173.702737z m109.97221-184.400842l-37.861052-38.319158-132.419369 130.802526C173.729684 571.095579 161.684211 529.812211 161.684211 469.315368 161.684211 398.578526 199.464421 323.368421 269.473684 323.368421h323.368421l53.894737-53.894737H269.473684c-6.709895 0-13.258105 0.565895-19.698526 1.482105C234.927158 249.451789 204.638316 215.578947 160.633263 215.578947 65.967158 215.578947 0 349.291789 0 469.315368c0 70.170947 16.141474 136.650105 49.232842 202.671158L6.197895 723.833263l41.472 34.41179 66.128842-79.737264-8.704-16.033684C83.105684 622.133895 53.894737 558.214737 53.894737 469.315368 53.894737 368.451368 106.765474 269.473684 160.633263 269.473684c13.231158 0 25.815579 9.889684 35.43579 20.533895C142.874947 321.967158 107.789474 388.500211 107.789474 469.315368c0 78.201263 19.698526 130.937263 93.642105 243.981474l-55.296 54.622316L280.899368 970.105263h64.754527l-130.048-195.072 195.260631-192.889263z" fill="#231F20" ></path></symbol><symbol id="icon-monkey_shen" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#BBC4C9" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 134.736842h161.684211v53.894737h53.894737V269.473684h-215.578948V161.684211h-53.894736v107.789473h-215.578948v431.157895h53.894737v-53.894737h161.684211v215.578947h53.894736v-215.578947z m0-161.68421h161.684211v107.789473h-161.684211v-107.789473z m-215.578947 0h161.684211v107.789473h-161.684211v-107.789473z m215.578947-161.684211h161.684211v107.789474h-161.684211v-107.789474z m-215.578947 0h161.684211v107.789474h-161.684211v-107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-ox_chou" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-161.68421 188.631579h-159.555369c13.985684-172.813474 43.115789-357.429895 70.817684-385.158737L700.631579 269.473684H323.368421v53.894737h107.169684c-1.940211 45.756632-8.192 103.962947-15.76421 161.684211H323.368421v53.894736h83.968c-9.862737 68.446316-20.264421 130.128842-25.734737 161.684211H215.578947v53.894737h592.842106v-53.894737z m-346.543158-161.684211h149.800421a3313.717895 3313.717895 0 0 0-16.842105 161.684211h-158.477474c6.036211-35.247158 16.114526-95.636211 25.519158-161.684211z m22.608842-215.578947h171.735579c-15.198316 41.121684-27.405474 100.594526-36.890948 161.684211h-150.123789c7.383579-57.505684 13.419789-115.361684 15.279158-161.684211z" fill="#231F20" ></path></symbol><symbol id="icon-monkey" viewBox="0 0 1024 1024"><path d="M757.733053 485.052632H565.894737a80.842105 80.842105 0 0 0-80.842105 80.842105v215.578947c0 40.96 43.546947 99.678316 77.446736 139.210105C596.426105 960.215579 603.055158 970.105263 603.055158 970.105263H754.526316s15.144421-18.674526 45.891368-58.071579S862.315789 809.984 862.315789 717.608421c0-89.573053-47.993263-166.346105-104.582736-232.555789z" fill="#C3D686" ></path><path d="M538.947368 1024h-53.894736c0-32.794947 25.869474-87.417263 77.446736-103.316211C528.599579 881.152 485.052632 822.433684 485.052632 781.473684c0-44.570947 36.271158-80.842105 80.842105-80.842105h80.842105v53.894737h-80.842105a26.947368 26.947368 0 0 0-26.947369 26.947368c0 19.725474 36.675368 77.473684 92.133053 134.736842h88.602947c20.210526-14.147368 88.737684-71.464421 88.737685-198.602105 0-108.382316-93.237895-202.967579-168.151579-278.986105-49.502316-50.202947-88.576-89.842526-98.735158-128.61979-11.749053-44.732632-21.584842-112.586105-26.327579-148.318315H377.263158c-45.136842 0-89.519158 8.434526-121.802105 53.894736H431.157895v53.894737c-97.28 0-107.789474 113.071158-107.789474 161.684211v53.894737h53.894737v161.68421h-53.894737v-107.789474h-26.947368c-170.253474 0-188.631579-94.234947-188.631579-134.736842 0-31.043368 35.220211-72.326737 55.727158-93.722947 2.694737-14.686316 5.847579-28.348632 9.431579-41.013895H161.684211V215.578947h31.528421C239.642947 120.993684 317.224421 107.789474 377.263158 107.789474h185.640421l2.802526 23.794526c0.134737 1.050947 12.719158 106.657684 27.944421 164.756211 6.494316 24.872421 44.624842 63.514947 84.965053 104.448C760.481684 483.813053 862.315789 587.129263 862.315789 717.608421c0 92.375579-31.124211 155.028211-61.898105 194.425263C904.919579 892.146526 970.105263 803.004632 970.105263 673.684211c0-91.405474-42.819368-154.381474-84.237474-215.255579C847.791158 402.458947 808.421053 344.576 808.421053 269.473684c0-119.349895 87.093895-161.684211 161.68421-161.68421v53.894737c-32.417684 0-107.789474 10.509474-107.789474 107.789473 0 58.502737 31.555368 104.933053 68.096 158.639158C974.282105 492.597895 1024 565.679158 1024 673.684211c0 177.286737-108.301474 296.421053-269.473684 296.421052h-161.684211c-37.672421 0-53.894737 40.906105-53.894737 53.894737zM229.214316 269.473684a384.808421 384.808421 0 0 0-14.012632 58.341053l-1.401263 8.488421-6.090105 6.117053c-22.878316 22.932211-44.813474 52.601263-46.026105 62.275368 0 56.805053 53.76 75.264 107.789473 79.386947V431.157895c0-58.691368 13.473684-119.619368 46.511158-161.684211h-86.770526zM323.368421 1024h-53.894737c0-32.794947 25.869474-87.417263 77.446737-103.316211C313.020632 881.152 269.473684 822.433684 269.473684 781.473684c0-44.570947 36.271158-80.842105 80.842105-80.842105h45.16379A188.847158 188.847158 0 0 1 565.894737 592.842105h134.736842v53.894737h-134.736842c-74.293895 0-134.736842 60.442947-134.736842 134.736842v26.516211l-53.894737 0.377263V781.473684c0-9.162105 0.646737-18.135579 1.913263-26.947368H350.315789c-14.848 0-26.947368 12.072421-26.947368 26.947368 0 19.725474 36.675368 77.473684 92.133053 134.736842H431.157895v53.894737h-53.894737c-37.672421 0-53.894737 40.906105-53.894737 53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-horse_wu" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#FF8787" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 26.947368h269.473685v-53.894736H538.947368v-161.684211h161.684211v-53.894737H411.001263c12.045474-33.28 20.156632-69.793684 20.156632-107.789473h-53.894737c0 121.963789-105.364211 233.391158-106.415158 234.496l38.858105 37.349052c2.883368-3.018105 43.816421-46.133895 77.392842-110.160842H485.052632v161.684211H215.578947v53.894736h269.473685v323.368421h53.894736V538.947368z" fill="#231F20" ></path></symbol><symbol id="icon-ox" viewBox="0 0 1025 1024"><path d="M540.294737 754.526316h215.578947c20.210526 0 35.112421 1.374316 53.894737 4.581052 91.863579 15.656421 145.354105 67.691789 161.684211 86.069895V916.210526h53.894736V635.580632l-7.895579-7.895579c-9.269895-9.269895-36.513684-49.232842-44.032-196.527158H540.294737a161.684211 161.684211 0 0 0-161.684211 161.68421v131.098948c43.304421 20.210526 97.28 30.585263 161.684211 30.585263z" fill="#FFAF6E" ></path><path d="M1025.347368 635.580632V916.210526h-53.894736v-71.033263c-16.330105-18.405053-69.820632-70.413474-161.684211-86.069895V916.210526h-53.894737v-161.68421h-107.789473v215.578947h-53.894737V700.631579h161.68421c100.998737 0 172.570947 38.669474 215.578948 71.868632v-115.738948c-33.684211-43.627789-51.712-137.458526-53.706106-279.498105H701.978947c-76.934737 0-127.218526-26.219789-175.804631-51.550316a1556.048842 1556.048842 0 0 0-26.839579-13.743158c-26.839579 26.004211-66.209684 44.921263-115.738948 55.511579 24.441263 22.986105 60.874105 52.116211 106.469053 72.838737l-22.312421 49.044211c-76.584421-34.816-129.589895-88.926316-150.824421-113.125053-10.644211 0.619789-21.477053 1.024-32.687158 1.024a473.734737 473.734737 0 0 1-123.365053-15.952842l-93.022315 186.314105 68.581052 53.86779C167.882105 579.557053 237.891368 538.947368 324.715789 538.947368v53.894737c-95.986526 0-170.361263 62.490947-171.088842 63.137684l-16.78821 14.282106-136.838737-107.358316 109.729684-219.809684C46.430316 314.448842 1.347368 267.371789 1.347368 199.868632 1.347368 89.815579 121.586526 53.894737 163.031579 53.894737v53.894737c-14.120421 0-107.789474 17.165474-107.789474 92.079158C55.242105 290.465684 192.188632 323.368421 284.240842 323.368421c67.907368 0 122.421895-12.988632 157.696-35.624421-42.711579-14.336-95.097263-23.120842-169.337263-18.324211l-3.503158-53.786947c95.878737-6.117053 160.148211 8.515368 211.429053 28.833684C484.244211 235.439158 486.4 225.818947 486.4 215.578947c0-48.855579-57.829053-76.288-58.394947-76.557473l22.393263-49.017263C454.063158 91.648 540.294737 131.826526 540.294737 215.578947c0 18.566737-3.422316 35.84-9.997474 51.631158 7.060211 3.584 13.985684 7.168 20.776421 10.698106C597.854316 302.322526 638.248421 323.368421 701.978947 323.368421h269.473685v26.947368c0 214.689684 35.220211 266.590316 45.999157 277.369264l7.895579 7.895579z m-729.384421 25.141894l-98.789052 118.541474 86.797473 137.835789 45.594948-28.725894-65.913263-104.690527 37.052631-44.43621C358.642526 785.192421 439.080421 808.421053 540.294737 808.421053v-53.894737c-99.893895 0-175.077053-24.549053-223.474526-72.946527l-20.857264-20.857263z" fill="#231F20" ></path></symbol><symbol id="icon-rabbit_mao" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#7DD47F" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-377.263158-188.631579h107.789474v323.368421c-20.48 0-39.936-11.264-40.016842-11.317895l-27.728842 46.214737c3.206737 1.940211 32.660211 18.997895 67.745684 18.997895 30.746947 0 53.894737-23.147789 53.894737-53.894737V269.473684h-215.578948v538.947369h53.894737V323.368421z m-107.789473 242.526316v-242.526316h-53.894737v196.904421l-107.789474 40.421053v-243.927579l169.094737-48.316632-14.821053-51.819789L269.473684 276.102737v304.801684l-36.405895 13.662316 18.917053 50.472421 178.741895-67.018105c-5.039158 69.928421-55.269053 106.981053-165.133474 122.933894l7.733895 53.328842C325.712842 746.657684 485.052632 723.536842 485.052632 565.894737z" fill="#231F20" ></path></symbol><symbol id="icon-rabbit" viewBox="0 0 1024 1024"><path d="M680.96 488.744421a1666.667789 1666.667789 0 0 0-54.433684-23.95621c-16.006737 12.234105-33.899789 20.264421-60.631579 20.264421h-80.842105c-36.810105 0-83.644632 30.396632-104.394106 67.772631-42.819368 77.123368-53.409684 117.813895-11.021473 201.701053C397.096421 808.879158 431.157895 876.409263 431.157895 970.105263h338.539789l68.338527-138.859789c20.129684-40.96 24.252632-73.701053 24.252631-110.349474 0.026947-57.397895-25.061053-159.717053-181.328842-232.151579z" fill="#FFBDD8" ></path><path d="M862.315789 720.896c0 36.621474-4.122947 69.389474-24.252631 110.349474L769.697684 970.105263H485.052632v-53.894737h48.370526C507.877053 880.074105 485.052632 833.509053 485.052632 781.473684c0-59.418947 24.171789-113.313684 63.218526-152.360421l38.103579 38.103579A161.091368 161.091368 0 0 0 538.947368 781.473684c0 54.784 35.381895 104.043789 63.514948 134.736842h133.712842l53.490526-108.759579c15.710316-31.851789 18.755368-55.834947 18.755369-86.554947 0-80.976842-63.434105-150.096842-178.607158-195.503158-17.542737 8.138105-38.292211 13.554526-63.919158 13.554526h-80.842105c-13.958737 0-43.924211 15.979789-57.290106 40.016843l-47.104-26.165895C401.408 515.449263 448.242526 485.052632 485.052632 485.052632h80.842105c37.268211 0 57.478737-15.440842 79.090526-36.45979C625.367579 336.195368 549.753263 269.473684 485.052632 269.473684h-107.789474a21.288421 21.288421 0 0 0-5.955369 2.021053A683.762526 683.762526 0 0 0 302.187789 194.021053c-35.84-34.223158-61.763368-58.933895-94.908631-79.440842A42.442105 42.442105 0 0 0 185.478737 107.789474a22.824421 22.824421 0 0 0-17.381053 7.194947c-10.913684 11.425684-6.063158 28.240842 1.428211 39.181474 21.989053 32.121263 47.912421 56.858947 83.752421 91.109052 20.614737 19.671579 49.259789 43.169684 77.392842 63.08379C281.007158 367.400421 215.578947 484.432842 215.578947 592.842105c0 74.482526 24.791579 124.065684 51.065264 176.586106C294.534737 825.209263 323.368421 882.903579 323.368421 970.105263h-53.894737c0-74.482526-24.791579-124.065684-51.065263-176.586105C190.517895 737.738105 161.684211 680.043789 161.684211 592.842105c0-90.866526 42.226526-197.685895 93.453473-274.485894a803.759158 803.759158 0 0 1-39.046737-34.115369C177.852632 247.754105 150.231579 221.399579 125.035789 184.616421c-24.441263-35.759158-22.797474-78.686316 4.069053-106.819368 26.300632-27.567158 70.898526-31.043368 106.522947-9.000421 37.941895 23.444211 65.562947 49.798737 103.774316 86.258526 9.970526 9.512421 33.037474 32.309895 56.93979 60.550737h68.634947c-27.621053-37.780211-60.416-72.730947-88.522105-99.543579-28.833684-27.540211-54.730105-52.116211-84.533895-74.024421L326.305684 0.296421c31.232 23.228632 57.802105 48.532211 87.309474 76.719158 53.840842 51.388632 94.450526 100.594526 121.74821 146.83621 82.836211 26.650947 150.042947 116.870737 165.025685 230.750316l1.724631 13.177263-9.404631 9.404632c-3.772632 3.772632-7.706947 7.653053-11.802948 11.587368C837.227789 561.178947 862.315789 663.498105 862.315789 720.896zM309.463579 754.526316c3.934316 8.057263 7.895579 16.087579 11.991579 24.144842C348.887579 832.970105 377.263158 889.128421 377.263158 970.105263h53.894737c0-93.696-34.061474-161.226105-61.520842-215.578947h-60.173474z m597.90821 53.894737c-3.422316 9.404632-7.814737 19.806316-13.770105 31.959579L829.790316 970.105263h60.065684l52.143158-105.957052c10.778947-21.935158 17.515789-40.016842 21.90821-55.727158h-56.535579zM514.694737 390.736842c0-34.223158-13.231158-44.463158-29.642105-44.463158s-29.642105 10.24-29.642106 44.463158c0 34.250105 13.231158 44.463158 29.642106 44.463158s29.642105-10.213053 29.642105-44.463158z" fill="#231F20" ></path></symbol><symbol id="icon-rat_zi" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#85C3DE" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 188.631579v-215.578947h269.473685v-53.894737H538.947368v-39.585684c26.543158-18.081684 94.585263-65.050947 177.852632-127.488L700.631579 215.578947H323.368421v53.894737h295.316211a4221.008842 4221.008842 0 0 1-121.640421 85.369263l-11.991579 8.003369V431.157895H242.526316v53.894737h242.526316v215.578947c0 48.343579-13.850947 53.894737-134.736843 53.894737v53.894737c105.391158 0 188.631579 0 188.631579-107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-rat" viewBox="0 0 1024 1024"><path d="M727.659789 431.157895c-132.581053 0-220.348632 47.454316-285.803789 154.354526-19.779368 32.309895-15.845053 76.503579-9.404632 96.579368 3.260632 10.159158 7.760842 18.647579 12.422737 25.546106C464.761263 737.010526 499.927579 754.526316 538.947368 754.526316h66.829474c1.158737 17.893053-1.967158 34.762105-15.144421 53.975579-12.692211 18.539789-37.807158 40.151579-56.32 54.810947 25.249684-0.673684 52.709053-0.997053 83.240421-0.997053C877.487158 862.315789 970.105263 711.922526 970.105263 571.176421 936.421053 512 882.364632 431.157895 727.659789 431.157895z" fill="#85C3DE" ></path><path d="M210.432 1012.897684l-43.573895-31.690105c106.954105-147.051789 185.317053-171.196632 423.828211-172.705684 21.396211-31.258947 16.249263-56.266105 9.377684-89.70779-3.557053-17.138526-7.221895-34.842947-7.221895-54.433684 0-68.958316 25.330526-104.636632 63.407158-136.973474l34.896842 41.040842c-29.453474 25.061053-44.409263 46.780632-44.409263 95.932632 0 14.093474 2.937263 28.402526 6.063158 43.546947 5.901474 28.510316 12.8 62.032842-1.131789 99.462737 166.373053-10.24 264.542316-96.902737 264.542315-236.193684C916.210526 418.330947 827.580632 323.368421 684.921263 323.368421c-83.644632 0-153.303579 29.696-174.187789 39.612632a224.875789 224.875789 0 0 1-20.533895 31.339789l-41.741474-34.115368 20.884211 17.057684-20.911158-16.976842C448.781474 359.828211 485.052632 314.287158 485.052632 262.736842c0-34.816-8.946526-60.766316-26.570106-77.069474-17.515789-16.249263-44.786526-24.602947-81.219368-24.953263V323.368421h-53.894737V109.783579l24.872421-1.913263c64.700632-4.931368 114.095158 7.895579 146.863158 38.238316C524.207158 173.056 538.947368 212.291368 538.947368 262.736842c0 11.102316-1.131789 21.908211-3.072 32.202105 37.268211-12.584421 89.842526-25.465263 149.045895-25.465263C858.165895 269.473684 970.105263 387.907368 970.105263 571.176421 970.105263 711.922526 877.487158 862.315789 617.552842 862.315789c-258.667789 0-311.942737 19.698526-407.120842 150.581895z m19.105684-256.835368c-12.045474 0-24.387368-0.565895-37.025684-1.64379l-22.096842-1.859368-2.425263-22.016C167.747368 728.144842 161.684211 672.444632 161.684211 631.026526c0-103.585684 21.450105-178.903579 53.894736-259.045052V107.789474h53.894737v274.782315l-2.021052 4.904422C235.439158 465.758316 215.578947 533.800421 215.578947 631.026526c0 22.878316 2.101895 51.442526 3.826527 70.979369 99.678316 2.802526 172.813474-35.408842 222.450526-116.493474l48.020211 24.090947c-11.237053 28.133053-11.371789 51.577263-0.377264 67.853474 9.701053 14.282105 28.645053 23.174737 49.448421 23.174737v53.894737c-39.019789 0-74.186105-17.515789-94.073263-46.888421a100.244211 100.244211 0 0 1-12.422737-25.546106c-53.221053 49.178947-121.128421 73.943579-202.913684 73.970527zM379.957895 525.473684c0-34.223158-13.231158-44.463158-29.642106-44.463158s-29.642105 10.24-29.642105 44.463158c0 34.250105 13.231158 44.463158 29.642105 44.463158s29.642105-10.213053 29.642106-44.463158z" fill="#231F20" ></path></symbol><symbol id="icon-rooster_you" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#BBC4C9" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-215.578947-188.631579h-161.684211v-26.947368h161.684211V242.526316H269.473684v53.894737h161.684211v26.947368h-161.684211v485.052632h53.894737v-53.894737h377.263158v53.894737h53.894737V323.368421zM323.368421 646.736842h377.263158v53.894737H323.368421v-53.894737z m0-269.473684h107.789474c0 103.316211-72.784842 107.654737-81.084632 107.789474L350.315789 538.947368c46.592 0 134.736842-33.792 134.736843-161.68421h53.894736v107.789474c0 29.722947 24.171789 53.894737 53.894737 53.894736h107.789474v53.894737H323.368421v-215.578947z m377.263158 0v107.789474h-107.789474v-107.789474h107.789474z m-215.578947-80.842105h53.894736v26.947368h-53.894736v-26.947368z" fill="#231F20" ></path></symbol><symbol id="icon-rooster" viewBox="0 0 1024 1024"><path d="M891.688421 506.421895C877.244632 455.033263 862.315789 401.893053 862.315789 323.368421V116.224l-323.368421 195.745684V323.368421c0 78.524632 14.928842 131.664842 29.372632 183.053474 12.611368 44.894316 24.522105 87.282526 24.522105 140.314947 0 101.618526-77.931789 176.693895-168.286316 203.991579l5.416422 11.587368h215.578947c24.333474 0 43.385263-0.242526 58.556631-2.128842C811.52 846.821053 916.210526 764.550737 916.210526 646.736842c0-53.032421-11.910737-95.420632-24.522105-140.314947z" fill="#FF8787" ></path><path d="M673.684211 354.357895c-16.384 0-29.642105-10.213053-29.642106-44.463158 0-34.223158 13.231158-44.463158 29.642106-44.463158s29.642105 10.24 29.642105 44.463158c0 34.250105-13.258105 44.463158-29.642105 44.463158zM540.106105 970.105263l-50.58021-107.789474h156.05221l50.607158 107.789474h59.553684l-51.60421-109.918316C811.52 846.821053 916.210526 764.550737 916.210526 646.736842c0-53.032421-11.910737-95.420632-24.522105-140.314947C877.244632 455.033263 862.315789 401.893053 862.315789 323.368421V107.789474c0-59.445895-48.343579-107.789474-107.789473-107.789474a107.924211 107.924211 0 0 0-107.789474 106.172632 100.890947 100.890947 0 0 0-24.117895-3.314527 88.710737 88.710737 0 0 0-88.602947 88.602948c0 20.668632 5.227789 39.720421 10.671158 53.921684l-99.489684 59.688421 93.749894 14.470737V377.263158c0 14.416842-5.901474 21.692632-33.360842 49.152l-11.129263 11.129263C398.228211 326.521263 324.985263 269.473684 215.740632 269.473684 96.768 269.473684 0 366.241684 0 485.214316V646.736842h53.894737v-161.522526A162.007579 162.007579 0 0 1 215.740632 323.368421c82.081684 0 140.422737 36.244211 240.64 152.252632l-38.615579 38.615579C367.804632 461.285053 323.098947 431.157895 259.584 431.157895A151.983158 151.983158 0 0 0 107.789474 582.952421V754.526316h53.894737v-171.573895A98.007579 98.007579 0 0 1 259.584 485.052632c46.322526 0 79.629474 20.911158 137.027368 86.016l18.970948 21.530947 128.080842-128.080842C572.200421 435.981474 592.842105 415.366737 592.842105 377.263158v-97.926737l23.309474-14.120421-13.662316-23.04c-0.161684-0.242526-14.578526-24.899368-14.578526-50.688 0-19.132632 15.575579-34.708211 34.70821-34.708211 5.093053 0 26.785684 3.179789 39.558737 18.647579l26.327579 46.026106 39.774316-24.090948-20.372211-49.367579C704.754526 140.449684 700.631579 117.517474 700.631579 107.789474c0-29.722947 24.171789-53.894737 53.894737-53.894737s53.894737 24.171789 53.894737 53.894737v215.578947c0 85.935158 16.680421 145.300211 31.366736 197.632C851.887158 564.008421 862.315789 601.141895 862.315789 646.736842c0 95.285895-99.408842 161.684211-188.631578 161.684211h-209.461895l-68.419369-145.704421C375.242105 618.954105 338.108632 592.842105 296.448 592.842105A80.976842 80.976842 0 0 0 215.578947 673.711158V862.315789h53.894737v-188.604631c0-14.874947 12.099368-26.974316 26.974316-26.974316 20.533895 0 38.965895 14.147368 50.553263 38.858105L480.579368 970.105263h59.526737z" fill="#231F20" ></path></symbol><symbol id="icon-snake_si" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#FF8787" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-242.041263 180.762947l-52.116211-13.797052C657.219368 749.864421 651.425684 754.526316 619.789474 754.526316h-242.526316V485.052632h269.473684v53.894736h53.894737V215.578947H323.368421v538.947369c0 29.722947 24.171789 53.894737 53.894737 53.894737h242.526316c77.689263 0 91.189895-51.065263 108.274526-115.658106zM377.263158 269.473684h269.473684v161.684211H377.263158v-161.684211z" fill="#231F20" ></path></symbol><symbol id="icon-tiger_yin" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#7DD47F" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-257.42821 299.250526l-107.789474-53.894737-24.117895 48.208843 107.789474 53.894736 24.117895-48.208842z m-269.473685-5.658947l-24.117894-48.208842-107.789474 53.894737 24.117895 48.208842 107.789473-53.894737zM700.631579 431.157895h-161.684211v-53.894737h107.789474v-53.894737H377.263158v53.894737h107.789474v53.894737h-161.684211v323.368421h53.894737v-53.894737h269.473684v53.894737h53.894737V431.157895z m-161.684211 161.68421h107.789474v53.894737h-107.789474v-53.894737z m-161.68421 0h107.789474v53.894737h-107.789474v-53.894737z m161.68421-107.789473h107.789474v53.894736h-107.789474v-53.894736z m-161.68421 0h107.789474v53.894736h-107.789474v-53.894736zM754.526316 215.578947h-223.097263l-20.803369-62.410105-51.119158 17.057684L474.624 215.578947H269.473684v107.789474h53.894737v-53.894737h377.263158v53.894737h53.894737V215.578947z" fill="#231F20" ></path></symbol><symbol id="icon-snake" viewBox="0 0 1024 1024"><path d="M107.789474 790.474105c0-72.434526 67.880421-91.513263 121.451789-91.513263 74.401684 0 153.815579 34.438737 237.891369 70.925474 50.580211 21.935158 104.609684 45.325474 162.250105 63.083789-52.412632 44.786526-118.784 74.347789-195.152842 83.078737-143.171368 16.357053-326.440421 7.006316-326.440421-125.574737zM377.263158 215.578947c-15.575579 0-30.288842 3.449263-43.654737 9.377685A250.691368 250.691368 0 0 0 323.368421 296.421053c0 115.550316 76.422737 169.391158 137.83579 212.614736 8.138105 5.712842 16.141474 11.371789 23.848421 17.057685V323.368421a107.789474 107.789474 0 0 0-107.789474-107.789474z" fill="#C3D686" ></path><path d="M671.528421 788.857263c44.328421 11.964632 89.626947 19.563789 136.892632 19.56379 89.168842 0 161.684211-60.442947 161.68421-134.736842s-72.515368-134.736842-161.68421-134.736843c-19.078737 0-37.025684 1.509053-54.218106 4.015158-0.754526-101.402947-38.211368-172.355368-79.413894-219.648L673.684211 323.368421a1749.962105 1749.962105 0 0 1-79.036632-1.751579c45.702737 35.866947 108.705684 107.870316 105.984 232.367158 0 0.431158-0.080842 0.808421-0.10779 1.239579-34.923789 10.994526-66.155789 26.731789-95.097263 45.190737a163.085474 163.085474 0 0 0-15.845052-42.388211c-21.557895-39.639579-60.065684-66.775579-97.360842-93.022316C433.098105 423.343158 377.263158 384 377.263158 296.421053c0-130.290526 108.274526-188.631579 215.578947-188.631579 64.134737 0 132.715789 12.045474 214.366316 37.807158C802.330947 180.250947 780.099368 209.381053 700.631579 214.635789V161.684211h-53.894737v53.679157c-63.272421-1.024-104.528842-5.200842-104.986947-5.254736l-5.578106 53.598315C538.408421 263.949474 592.357053 269.473684 673.684211 269.473684c125.170526 0 188.631579-48.128 188.631578-143.063579V106.981053l-18.432-6.144C747.789474 68.823579 668.025263 53.894737 592.842105 53.894737c-158.666105 0-269.473684 99.732211-269.473684 242.526316 0 115.550316 76.422737 169.391158 137.83579 212.614736 33.684211 23.713684 65.509053 46.106947 81.003789 74.698106 9.539368 17.542737 13.285053 33.414737 12.341895 47.750737 21.153684 9.108211 42.118737 17.839158 62.949052 25.977263C671.151158 620.193684 729.977263 592.842105 808.421053 592.842105c59.445895 0 107.789474 36.271158 107.789473 80.842106s-48.343579 80.842105-107.789473 80.842105c-105.472 0-203.237053-42.388211-297.768421-83.429053-94.800842-41.094737-184.346947-79.952842-281.411369-79.952842C122.718316 591.171368 53.894737 644.715789 53.894737 727.578947c0 79.063579 67.098947 136.434526 159.555368 136.434527 142.174316 0 230.426947-66.883368 306.79579-129.886316 31.420632 13.419789 62.787368 26.058105 94.450526 37.133474-47.077053 49.637053-110.969263 82.566737-186.610526 91.270736l5.066105 53.625264c93.453474-7.006316 143.144421 9.350737 195.718737 26.543157 46.457263 15.225263 94.127158 30.854737 169.822316 30.854737 19.994947 0 41.957053-1.077895 66.344421-3.557052l-5.416421-53.625263c-105.283368 10.778947-158.100211-6.548211-213.935158-24.872422-22.150737-7.275789-44.624842-14.632421-70.305684-20.345263a334.848 334.848 0 0 0 96.14821-82.297263z m-458.078316 21.261474C162.573474 810.118737 107.789474 784.276211 107.789474 727.578947c0-60.847158 62.733474-82.539789 121.451789-82.539789 77.850947 0 154.731789 30.288842 235.250526 64.943158-66.263579 52.924632-139.722105 100.136421-251.041684 100.136421z" fill="#231F20" ></path></symbol><symbol id="icon-tiger" viewBox="0 0 1024 1024"><path d="M431.157895 162.250105V134.736842c0-41.552842-39.289263-80.842105-80.842106-80.842105-28.833684 0-57.128421 4.661895-58.314105 4.850526L269.473684 62.490947v83.887158C144.788211 223.824842 89.222737 346.839579 66.991158 431.157895h266.051368c240.747789 0 415.851789 107.789474 415.85179 269.473684-14.848-25.114947-43.924211-53.894737-88.68379-53.894737-67.988211 0-121.263158 71.033263-121.263158 161.684211 0 66.802526 30.477474 119.888842 60.712421 156.16 12.638316 15.171368 36.055579 37.726316 59.014737 58.88 5.066105 0.107789 9.781895 0.538947 15.009685 0.538947 219.297684 0 350.315789-191.811368 350.315789-377.263158C1024 327.545263 679.855158 172.813474 431.157895 162.250105z" fill="#F7C768" ></path><path d="M673.684211 1024c-114.768842 0-188.820211-33.333895-254.167579-62.787368-53.625263-24.144842-99.974737-45.002105-161.28-45.002106-40.448 0-83.590737 23.255579-103.639579 45.16379l-39.747369-36.432842C142.497684 894.787368 199.168 862.315789 258.236632 862.315789c68.392421 0 119.861895 21.288421 172.921263 45.056V673.684211c0-35.166316-17.542737-64.107789-30.639158-80.815158-15.198316 9.835789-32.067368 18.890105-50.741895 26.947368l-21.342316-49.475368C469.800421 509.413053 485.052632 377.317053 485.052632 323.368421V221.642105A597.827368 597.827368 0 0 0 404.210526 215.578947h-26.947368V134.736842c0-12.099368-14.848-26.947368-26.947369-26.947368-9.377684 0-18.836211 0.592842-26.947368 1.347368V269.473684h-53.894737V211.671579c-136.030316 102.912-158.450526 266.886737-161.306947 295.882105 9.135158 9.108211 38.992842 25.061053 71.976421 38.669474l38.103579-59.365053 12.449684-1.589894C321.212632 473.653895 377.263158 392.192 377.263158 323.368421h53.894737c0 88.333474-68.796632 192.242526-180.870737 213.342316l-48.397474 75.398737-20.291368-7.437474C53.894737 557.756632 53.894737 523.317895 53.894737 512c0-50.041263 37.025684-254.733474 215.578947-365.621895V62.490947l22.528-3.745684C293.187368 58.556632 321.482105 53.894737 350.315789 53.894737c41.552842 0 80.842105 39.289263 80.842106 80.842105v27.513263c248.697263 10.563368 592.842105 165.295158 592.842105 484.486737 0 185.451789-131.018105 377.263158-350.315789 377.263158z m-13.473685-323.368421c-36.513684 0-67.368421 49.367579-67.368421 107.789474 0 85.746526 68.096 145.084632 89.465263 161.549473 91.540211-2.533053 164.378947-45.487158 213.827369-107.654737H700.631579v-53.894736h230.238316c8.919579-17.273263 16.357053-35.354947 22.285473-53.894737h-239.885473l-6.467369-17.650527C706.290526 735.582316 692.439579 700.631579 660.210526 700.631579zM485.052632 931.112421c33.926737 14.066526 70.521263 26.597053 114.607157 33.468632C569.424842 928.309895 538.947368 875.223579 538.947368 808.421053c0-90.650947 53.274947-161.684211 121.263158-161.684211 44.759579 0 73.835789 28.779789 88.68379 53.894737h217.007158c2.775579-17.866105 4.203789-35.920842 4.203789-53.894737 0-38.938947-5.658947-74.752-15.925895-107.627789l-126.706526 126.679579-38.103579-38.103579L932.001684 485.052632a367.939368 367.939368 0 0 0-57.775158-81.596632l-154.543158 154.543158-38.103579-38.103579 153.573053-153.573053a537.869474 537.869474 0 0 0-82.593684-56.751158l-140.665263 140.638316-38.103579-38.103579 128.134737-128.134737A794.731789 794.731789 0 0 0 538.947368 231.046737V323.368421c0 50.149053-11.102316 156.698947-95.932631 236.328421 18.378105 23.417263 42.037895 63.407158 42.037895 113.987369v257.42821zM215.578947 431.157895v-53.894737c39.774316 0 53.894737-29.022316 53.894737-53.894737h53.894737c0 53.571368-37.025684 107.789474-107.789474 107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-boar" viewBox="0 0 1024 1024"><path d="M732.079158 377.263158c-107.789474 0-186.421895 31.393684-281.869474 126.841263L180.331789 773.982316C257.724632 807.909053 348.725895 808.421053 485.052632 808.421053h96.013473c55.834947-34.411789 133.551158-53.894737 227.354948-53.894737h121.344L970.105263 680.555789V572.631579c0-94.315789-130.236632-195.368421-238.026105-195.368421z" fill="#FFBDD8" ></path><path d="M808.421053 700.631579v53.894737c-196.446316 0-323.368421 84.641684-323.368421 215.578947h-53.894737c0-163.705263 148.075789-269.473684 377.263158-269.473684z m-323.368421 107.789474v-53.894737c-158.342737 0-245.598316 0-319.649685-49.367579L158.612211 700.631579H80.842105c-21.692632 0-26.624-14.821053-26.947368-26.947368v-82.620632c84.156632-11.183158 161.684211-74.913684 161.68421-186.853053V215.578947H161.684211v161.684211H134.736842c-66.964211 0-134.736842 37.025684-134.736842 107.789474h53.894737c0-42.630737 52.870737-53.894737 80.842105-53.894737h24.629895C147.132632 504.912842 85.153684 538.947368 26.947368 538.947368H0v134.736843c0 32.498526 21.530947 80.842105 80.842105 80.842105h61.682527c32.687158 20.506947 67.125895 33.145263 105.957052 41.013895A232.879158 232.879158 0 0 0 215.578947 916.210526h53.894737c0-41.930105 14.012632-80.303158 39.424-112.505263C358.885053 808.151579 415.959579 808.421053 485.052632 808.421053z m-72.946527-342.420211L323.368421 554.738526V431.157895h-53.894737v253.682526l180.736-180.736-38.103579-38.103579zM323.368421 161.684211h-53.894737v190.032842a769.536 769.536 0 0 1 53.894737-49.098106V161.684211z m323.368421-53.894737c-72.623158 0-146.809263 23.336421-215.578947 58.637473V107.789474h-53.894737v154.138947C458.832842 205.392842 555.331368 161.684211 646.736842 161.684211c148.587789 0 269.473684 120.885895 269.473684 269.473684v235.654737L809.579789 862.315789h61.359158L970.105263 680.555789V431.157895c0-178.310737-145.057684-323.368421-323.368421-323.368421z" fill="#231F20" ></path></symbol><symbol id="icon-boar_hai" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#85C3DE" ></path><path d="M309.975579 804.756211l-27.136-46.592c103.073684-60.011789 183.026526-132.473263 241.475368-219.24379H350.315789l-13.473684-50.283789c58.88-33.980632 99.435789-117.571368 118.703158-165.295158H242.526316v-53.894737h538.947368v53.894737h-268.18021c-12.395789 34.088421-42.469053 106.603789-90.435369 161.68421h134.009263a680.555789 680.555789 0 0 0 46.349474-107.708631l51.092211 17.057684c-58.421895 175.265684-171.034947 309.490526-344.333474 410.381474z m192.350316-2.937264L467.806316 760.454737c88.414316-73.728 154.516211-158.773895 202.105263-259.907369l48.801684 22.959158a797.372632 797.372632 0 0 1-82.351158 137.781895c32.741053 15.009684 83.456 44.867368 137.647158 101.591579l-38.938947 37.268211c-57.236211-59.877053-109.325474-85.557895-133.766737-95.178106a850.997895 850.997895 0 0 1-98.977684 96.848842z m48.613052-536.872421l-80.842105-53.894737 29.884632-44.840421 80.842105 53.894737-29.884632 44.840421zM512 53.894737C259.395368 53.894737 53.894737 259.395368 53.894737 512s205.500632 458.105263 458.105263 458.105263c9.081263 0 17.973895-0.835368 26.947368-1.374316v-53.894736c-8.946526 0.619789-17.866105 1.374316-26.947368 1.374315-222.881684 0-404.210526-181.328842-404.210526-404.210526S289.118316 107.789474 512 107.789474s404.210526 181.328842 404.210526 404.210526c0 195.206737-139.075368 358.507789-323.368421 396.045474v54.460631c214.096842-38.346105 377.263158-225.549474 377.263158-450.533052C970.105263 259.395368 764.604632 53.894737 512 53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-bilibili1" viewBox="0 0 1129 1024"><path d="M234.909 9.656a80.468 80.468 0 0 1 68.398 0 167.374 167.374 0 0 1 41.843 30.578l160.937 140.82h115.07l160.936-140.82a168.983 168.983 0 0 1 41.843-30.578A80.468 80.468 0 0 1 930.96 76.445a80.468 80.468 0 0 1-17.703 53.914 449.818 449.818 0 0 1-35.406 32.187 232.553 232.553 0 0 1-22.531 18.508h100.585a170.593 170.593 0 0 1 118.289 53.109 171.397 171.397 0 0 1 53.914 118.288v462.693a325.897 325.897 0 0 1-4.024 70.007 178.64 178.64 0 0 1-80.468 112.656 173.007 173.007 0 0 1-92.539 25.75H212.377a341.186 341.186 0 0 1-72.421-4.024A177.835 177.835 0 0 1 28.91 939.065a172.202 172.202 0 0 1-27.36-92.539V388.662a360.498 360.498 0 0 1 0-66.789A177.03 177.03 0 0 1 162.487 178.64h105.414c-16.899-12.07-31.383-26.555-46.672-39.43a80.468 80.468 0 0 1-25.75-65.984 80.468 80.468 0 0 1 39.43-63.57M216.4 321.873a80.468 80.468 0 0 0-63.57 57.937 108.632 108.632 0 0 0 0 30.578v380.615a80.468 80.468 0 0 0 55.523 80.469 106.218 106.218 0 0 0 34.601 5.632h654.208a80.468 80.468 0 0 0 76.444-47.476 112.656 112.656 0 0 0 8.047-53.109v-354.06a135.187 135.187 0 0 0 0-38.625 80.468 80.468 0 0 0-52.304-54.719 129.554 129.554 0 0 0-49.89-7.242H254.22a268.764 268.764 0 0 0-37.82 0z m0 0" fill="#20B0E3" ></path><path d="M348.369 447.404a80.468 80.468 0 0 1 55.523 18.507 80.468 80.468 0 0 1 28.164 59.547v80.468a80.468 80.468 0 0 1-16.094 51.5 80.468 80.468 0 0 1-131.968-9.656 104.609 104.609 0 0 1-10.46-54.719v-80.468a80.468 80.468 0 0 1 70.007-67.593z m416.02 0a80.468 80.468 0 0 1 86.102 75.64v80.468a94.148 94.148 0 0 1-12.07 53.11 80.468 80.468 0 0 1-132.773 0 95.757 95.757 0 0 1-12.875-57.133V519.02a80.468 80.468 0 0 1 70.007-70.812z m0 0" fill="#20B0E3" ></path></symbol><symbol id="icon-yinle" viewBox="0 0 1024 1024"><path d="M512.2976 0a531.2 531.2 0 0 0-512 548.48V960h128V548.48a398.72 398.72 0 0 1 384-411.52 398.72 398.72 0 0 1 384 411.52V960h128V548.48A531.2 531.2 0 0 0 512.2976 0z" fill="#5c8add" ></path><path d="M64.2976 576l256 0 0 448-256 0 0-448Z" fill="#5c8add" ></path><path d="M704.2976 576l256 0 0 448-256 0 0-448Z" fill="#5c8add" ></path></symbol><symbol id="icon-icon-test-copy" viewBox="0 0 1024 1024"><path d="M512 512m-229.517241 0a229.517241 229.517241 0 1 0 459.034482 0 229.517241 229.517241 0 1 0-459.034482 0Z" fill="#5c8add" ></path><path d="M512 1024A512 512 0 1 1 1024 512 512 512 0 0 1 512 1024z m0-141.241379A370.758621 370.758621 0 1 0 141.241379 512 370.758621 370.758621 0 0 0 512 882.758621z" fill="#5c8add" ></path></symbol><symbol id="icon-V" viewBox="0 0 1024 1024"><path d="M1012.47774251 492.58192592L544.94137566 87.22962963a49.96686561 49.96686561 0 0 0-65.88275132 0L11.63784127 492.6975097c-21.03624691 18.26223633-23.3479224 49.93219048-5.08568606 70.96843739 18.03106878 21.03624691 49.93219048 23.3479224 70.96843738 5.08568607L512 191.83294532l434.71057495 376.91868784c9.47786949 8.20644797 21.26741446 12.25188008 32.82579189 12.13629629 14.10122046 0 27.97127337-5.77918871 38.02706173-17.33756613 18.14665256-20.92066314 15.95056084-52.70620106-5.08568606-70.9684374z" fill="#5c8add" ></path><path d="M109.30613051 567.59579541V896.89396825c0 42.53482892 34.90629982 77.44112875 77.44112875 77.44112875h220.76500882V666.30433862c0-25.54401411 20.92066314-46.46467725 46.46467724-46.46467724h116.16169313c25.54401411 0 46.46467725 20.92066314 46.46467725 46.46467724V974.335097h220.76500882c42.53482892 0 77.44112875-34.90629982 77.44112874-77.44112875l0.11558377-329.29817284L512 218.18604586 109.30613051 567.59579541zM848.00203175 197.49655027h-63.91782716c-12.82979894 0-23.23233862 10.40253968-23.23233863 23.23233862v24.27259259l110.49808818 95.70336508V220.72888889h-0.11558377c0-12.82979894-10.40253968-23.23233862-23.23233862-23.23233862zM905.44716754 83.18419754s-34.90629982 56.86721693-89.11508994 100.32671603c152.68616579 13.98563668 127.83565432-133.26809171 127.83565432-133.2680917-134.07717813-10.28695591-132.92134039 102.29164021-131.072 127.83565432 20.92066314-20.92066314 49.70102293-62.64640564 92.35143562-94.89427865zM798.53217637 174.61096297c-19.64924162-16.52847972-40.56990476-43.45949912-51.203612-53.97762258 0 0 32.94137566 20.57391182 56.40488184 49.3542716 2.42725926-18.37782011 6.47269135-93.3916896-93.16052205-85.3008254 0 0-13.98563668 104.71889947 87.95925221 89.92417638z" fill="#5c8add" ></path></symbol><symbol id="icon-zhifeiji" viewBox="0 0 1167 1024"><path d="M41.201759 463.52493L1110.665064 30.117647c10.32605-4.159104 21.942857 0.860504 26.101961 11.043137 1.434174 3.728852 1.864426 7.744538 1.003921 11.616807L949.033691 978.823529c-2.151261 10.89972-12.764146 17.927171-23.663865 15.632493-2.72493-0.573669-5.306443-1.721008-7.601121-3.298599L634.80624 789.79944l-163.065546 133.951821c-16.492997 13.62465-40.87395 11.186555-54.498599-5.306443-3.011765-3.728852-5.306443-7.887955-6.884034-12.477311l-102.973669-313.080112-265.178712-91.787115c-10.469468-3.585434-16.062745-15.058824-12.333893-25.528291 1.864426-5.44986 6.023529-9.895798 11.329972-12.047059z" fill="#FCFDFC" ></path><path d="M929.385512 1023.569748c-3.155182 0-6.453782-0.286835-9.752381-1.003922-6.740616-1.434174-12.907563-4.015686-18.50084-8.031372L635.953579 825.940616l-146.142297 120.040336c-13.911485 11.473389-31.408403 16.779832-49.335574 15.058824-17.927171-1.721008-34.133333-10.32605-45.463305-24.237535-5.306443-6.453782-9.322129-13.768067-11.903642-21.79944l-98.527731-299.598879-251.697479-87.19776c-12.333894-4.302521-22.229692-13.05098-27.966386-24.811204s-6.453782-24.954622-2.151261-37.288515c4.589356-13.337815 14.771989-23.9507 27.82297-29.257143L1099.908761 3.585434c24.954622-10.039216 53.351261 2.007843 63.533894 26.819048 3.585434 8.891877 4.445938 18.644258 2.581513 28.109804L977.143495 984.560224c-4.732773 23.090196-25.098039 39.009524-47.757983 39.009524z m-294.579272-233.770308l282.962465 201.357983c2.294678 1.577591 4.87619 2.72493 7.601121 3.298599 10.89972 2.151261 21.512605-4.87619 23.663865-15.632493L1137.914364 52.777591c0.860504-3.872269 0.430252-7.887955-1.003922-11.616807-4.159104-10.32605-15.919328-15.202241-26.101961-11.043137L41.201759 463.52493c-5.306443 2.151261-9.465546 6.597199-11.47339 12.047059-1.721008 5.019608-1.434174 10.469468 0.860505 15.345658 2.294678 4.87619 6.453782 8.461625 11.473389 10.182633l265.178711 91.787115L410.214644 905.967507c1.434174 4.589356 3.872269 8.748459 6.884033 12.477311 6.597199 8.031373 15.919328 12.907563 26.101961 13.911485 10.32605 1.003922 20.365266-2.007843 28.396639-8.605042l163.208963-133.951821z" fill="#4A4A4A" ></path><path d="M307.097557 592.743978l105.698599 316.091876c6.310364 18.787675 26.532213 28.970308 45.319888 22.659944 4.159104-1.434174 7.887955-3.442017 11.186555-6.166946l164.786555-133.951821-165.360224-118.892997c297.017367-287.982073 447.462185-433.980952 451.191036-437.853222 0.573669-0.573669 2.581513-3.442017 0.430252-7.027451-1.290756-1.577591-3.298599-3.298599-7.027451-2.15126-202.218487 120.327171-404.293557 242.805602-606.22521 367.291877z" fill="#CAE0EE" ></path><path d="M446.786072 934.794398c-5.736695 0-11.329972-1.290756-16.636414-3.872269-8.891877-4.445938-15.632493-12.047059-18.787675-21.512605L305.376549 592.313725l1.003921-0.573669C507.308201 467.684034 711.391114 344.058263 912.60568 224.161345l0.286835-0.143418c3.585434-1.147339 6.310364-0.286835 8.605042 2.581513l0.143417 0.143417c2.438095 4.015686 0.573669 7.457703-0.573669 8.74846-3.872269 4.015686-155.177591 150.87507-450.043698 436.705882l165.503642 119.036414-166.220728 135.09916c-3.442017 2.868347-7.457703 5.019608-11.760225 6.453782-3.728852 1.290756-7.744538 2.007843-11.760224 2.007843z m-137.967507-341.333334l105.268348 314.944538c2.868347 8.748459 9.035294 15.77591 17.210084 19.935014 8.17479 4.159104 17.496919 4.732773 26.245378 1.864426 3.872269-1.290756 7.60112-3.298599 10.756302-5.880112l163.352381-132.804482L466.434252 672.627451l1.290756-1.147339C763.308201 384.932213 915.043775 237.642577 918.772627 233.626891c0 0 2.007843-2.294678 0.286835-5.306443-1.003922-1.290756-2.438095-2.438095-5.306443-1.577591-200.784314 119.610084-404.293557 242.94902-604.934454 366.718207z" fill="#CAE0EE" ></path><path d="M460.840974 924.898599l7.457703-253.561904 165.933894 119.896918-168.658824 135.959664c-1.290756 1.003922-3.011765 0.860504-4.015686-0.430252-0.430252-0.430252-0.717087-1.147339-0.717087-1.864426z" fill="#94C3E2" ></path><path d="M463.709322 929.344538c-1.290756 0-2.438095-0.573669-3.2986-1.577591-0.573669-0.860504-1.003922-1.864426-1.003921-2.868348l7.60112-256.286834 169.519328 122.621848-1.434174 1.147339-168.658823 135.959664c-0.860504 0.717087-1.721008 1.003922-2.72493 1.003922z m6.023529-255.282913l-7.457703 250.836974c0 0.286835 0.143417 0.717087 0.286835 1.003922 0.430252 0.573669 1.434174 0.717087 2.007843 0.286835l167.22465-134.812325-162.061625-117.315406z" fill="#94C3E2" ></path></symbol><symbol id="icon-lianjie" viewBox="0 0 1079 1024"><path d="M695.355535 432.666896c-0.553495-1.10699-0.885592-2.186305-1.383737-3.265619-0.193723-0.193723-0.193723-0.359772-0.359771-0.719543-12.508983-26.318678-39.436506-43.366319-69.325226-41.013966-39.076734 3.265619-68.439634 39.021384-65.312388 79.841627 0.857917 10.516401 3.653066 20.147211 7.998 28.83708 19.78744 46.659613 11.097571 103.448181-25.377737 141.750022l-191.094085 199.950001a118.088119 118.088119 0 0 1-171.998513 0c-47.434506-49.537786-47.434506-130.098956 0-179.636742l71.234782-74.389703-0.52582-0.553494a75.911814 75.911814 0 0 0 24.326097-61.880721c-3.127246-40.820243-37.3609-71.51153-76.437634-68.24591a69.463599 69.463599 0 0 0-46.908685 23.966325l-0.166049-0.193723-72.618519 75.856464c-103.226783 107.793115-103.226783 282.36538 0 390.158495 103.171433 107.793115 270.299193 107.793115 373.498301 0l191.619904-200.1714c80.256748-83.992838 97.636485-208.307773 52.83108-310.289193z" fill="#5c8add" ></path><path d="M1002.047012 80.865592c-103.226783-107.82079-270.382217-107.82079-373.581325 0l-191.619905 200.199075c-80.284423 83.854464-97.66416 208.197074-52.997128 310.233843 0.52582 1.079315 0.857917 2.15863 1.383737 3.26562 0.166048 0.166048 0.166048 0.359772 0.332097 0.719543 12.536658 26.291004 39.46418 43.366319 69.3529 41.013966 39.076734-3.265619 68.439634-39.021384 65.312388-79.869302a78.679288 78.679288 0 0 0-7.998-28.864755c-19.78744-46.631938-11.097571-103.448181 25.377737-141.750022l191.287808-199.839302a118.088119 118.088119 0 0 1 172.026188 0c47.434506 49.537786 47.434506 130.126631 0 179.692091l-71.234782 74.417378 0.52582 0.553495a75.939489 75.939489 0 0 0-24.353772 61.88072c3.15492 40.847917 37.3609 71.51153 76.465309 68.245911a69.463599 69.463599 0 0 0 46.908685-23.938651l0.166049 0.166048 72.646194-75.856464c103.03306-107.82079 103.03306-282.642127 0-390.269194z" fill="#5c8add" ></path></symbol><symbol id="icon-liaotian" viewBox="0 0 1171 1024"><path d="M1068.71699 0.243751H102.193768C46.228437 0.243751 0.500666 45.045267 0.500666 99.74309v696.251622c0 54.697824 45.727771 99.450589 101.693102 99.450589h329.113198l120.851966 114.465677a48.652788 48.652788 0 0 0 66.641644 0l120.851966-114.465677h329.064448c55.965331 0 101.741852-44.752765 101.741852-99.450589V99.74309C1170.458842 45.045267 1124.682321 0.243751 1068.71699 0.243751z m-439.776354 596.849784h-370.989696c-27.933915 0-50.846551-22.425133-50.846551-49.774045 0-27.348912 22.912636-49.725294 50.846551-49.725294h370.989696c27.933915 0 50.846551 22.376382 50.846551 49.725294 0 27.348912-22.912636 49.774045-50.846551 49.774045z m287.18795-211.381252H254.782171a50.456549 50.456549 0 0 1-50.846551-49.725294c0-27.397662 22.912636-49.774045 50.846551-49.774045h661.346415c27.933915 0 50.846551 22.376382 50.846551 49.774045 0 27.348912-22.912636 49.725294-50.846551 49.725294z" fill="#5C8ADD" ></path></symbol><symbol id="icon-xinfeng" viewBox="0 0 1400 1024"><path d="M1301.63733163 214.78520234a207.81921797 207.81921797 0 0 1 7.02423018 52.42036465v489.73590176a205.10753818 205.10753818 0 0 1-205.05853125 205.05853125H283.05853124A205.15654424 205.15654424 0 0 1 77.99999999 756.79444971V267.20556699a201.36672685 201.36672685 0 0 1 7.02423106-52.42036465L586.24393329 562.1905874c69.44187217 51.96297217 146.36536612 49.13694404 214.1736961 0zM1103.60303056 62.0000167H283.05853124A204.50312753 204.50312753 0 0 0 106.37462518 163.41030547l489.71956641 335.75823018c62.43397646 50.77048623 127.85733457 50.31309463 194.62019765 0L1280.28693749 163.41030547A204.68281729 204.68281729 0 0 0 1103.60303056 62.0000167z m0 0" fill="#5c8add" ></path></symbol><symbol id="icon-QQ1" viewBox="0 0 1024 1024"><path d="M0 512a512 512 0 1 0 1024 0A512 512 0 1 0 0 512z" fill="#18ACFC" ></path><path d="M500.113 228.39c118.396-1.518 178.924 61.004 201 156 3.497 15.048 0.15 34.807 0 50 27.143 5.682 33.087 60.106 10 75v1h1c8.26 14.33 19.04 28.125 26 44 7.332 16.723 9.306 35.16 14 55 4.024 17.01-2.287 51.505-10 57-0.771 0.683-2.231 1.312-3 2-14.601-3.016-30.377-16.865-38-27-3.065-4.074-5.275-9.672-10-12-0.395 21.568-12.503 41.15-22 55-3.514 5.123-14.073 13.217-14 18 3.691 2.836 8.305 2.956 13 5 10.513 4.577 25.449 13.168 32 22 2.334 3.146 5.548 7.555 7 11 16.193 38.414-36.527 48.314-63 54-27.185 5.839-77.818-10.224-92-19-8.749-5.414-16.863-18.573-29-19-3.666 2.389-14.438 1.132-20 1-16.829 32.804-101.913 47.868-148 31-14.061-5.146-43.398-17.695-38-40 4.437-18.327 19.947-29.224 35-37 5.759-2.975 18.915-4.419 22-10-13.141-8.988-24.521-28.659-31-44-3.412-8.077-4.193-25.775-9-32-7.789 12.245-32.097 36.91-52 33-3.071-4.553-7.213-9.097-9-15-4.792-15.835-1.81-40.379 2-54 8.117-29.02 16.965-50.623 32-72 4.672-6.643 11.425-12.135 16-19-8.945-9.733-6.951-37.536-1-49 4.002-7.709 9.701-7.413 10-20-1.92-3.022-0.071-8.604-1-13-4.383-20.75 3.273-47.552 9-63 19.8-53.421 53.712-90.466 105-112 11.986-5.033 25.833-7.783 39-11 5.322-1.3 11.969 0.518 16-2z" fill="#FFFFFF" ></path></symbol><symbol id="icon-rss" viewBox="0 0 1024 1024"><path d="M749.61196492 908.06119793C749.61196492 560.41848146 463.58151854 274.36328126 115.93880207 274.36328126V115.93880207c434.50388795 0 792.12239584 357.61850789 792.12239586 792.12239586zM224.55858562 690.72261555a108.91682943 108.91682943 0 0 1 108.69404499 108.74355267C333.25263061 859.29616292 284.24005737 908.06119793 224.31104736 908.06119793 164.48105265 908.06119793 115.96355592 859.41993206 115.96355592 799.46616822s48.69077351-108.71879883 108.61978351-108.74355267zM641.01693522 908.06119793h-153.96879069c0-203.60020956-167.50913289-371.13409627-371.10934246-371.13409629v-153.96879068c288.03550619 0 525.07813313 237.11688843 525.07813315 525.10288697z" fill="#FFA500" ></path></symbol><symbol id="icon-youxiang" viewBox="0 0 1024 1024"><path d="M583.60666667 972h-68.08c-8.43333333 0-15.33333333-6.9-15.33333334-15.33333333V609.52c0-8.43333333 6.9-15.33333333 15.33333334-15.33333333h68.08c8.43333333 0 15.33333333 6.9 15.33333333 15.33333333V956.66666667c0 8.43333333-6.9 15.33333333-15.33333333 15.33333333z" fill="#629FF9" ></path><path d="M294.42 167c-113.62 0-205.77333333 92-205.77333333 205.31333333v336.72h411.39333333V372.31333333c0.15333333-113.31333333-92-205.31333333-205.62-205.31333333z" fill="#2166CC" ></path><path d="M519.97333333 627H216.98666667c-25.45333333 0-46-20.54666667-46-46V393.78c0-25.45333333 20.54666667-46 46-46h302.98666666c25.45333333 0 46 20.54666667 46 46V581c0 25.45333333-20.54666667 46-46 46z" fill="#D2E4FF" ></path><path d="M565.97333333 397a49.22 49.22 0 0 0-49.37333333-49.22H220.36c-27.29333333 0-49.37333333 22.08-49.37333333 49.22v10.27333333l179.4 94.60666667c11.34666667 5.98 24.84 5.98 36.18666666 0l179.4-94.60666667v-10.27333333z" fill="#FFFFFF" ></path><path d="M730.5 167h-427.8v0.46c109.78666667 4.29333333 197.49333333 94.3 197.49333333 205.00666667v336.72h411.39333334c27.29333333 0 49.37333333-22.08 49.37333333-49.22V397c0-126.96-103.19333333-230-230.46-230z" fill="#4E8DF6" ></path><path d="M845.80666667 52H681.12666667c-9.04666667 0-16.40666667 7.36-16.40666667 16.40666667v336.72a24.67133333 24.67133333 0 1 0 49.37333333 0V134.18666667h131.71333334c9.04666667 0 16.40666667-7.36 16.40666666-16.40666667V68.40666667c0-9.04666667-7.36-16.40666667-16.40666666-16.40666667z" fill="#2166CC" ></path><path d="M896.25333333 659.81333333h-35.11333333c-8.43333333 0-15.33333333-6.9-15.33333333-15.33333333v-35.11333333c0-8.43333333 6.9-15.33333333 15.33333333-15.33333334h35.11333333c8.43333333 0 15.33333333 6.9 15.33333334 15.33333334v35.11333333c0 8.58666667-6.9 15.33333333-15.33333334 15.33333333z" fill="#FFFFFF" ></path><path d="M88.8 709.18666667l-24.22666667 131.40666666c-9.66 54.43333333 26.83333333 98.59333333 81.26666667 98.59333334h213.9c54.58666667 0 106.56666667-44.16 116.22666667-98.59333334l23.15333333-131.40666666H88.8z" fill="#2974CE" ></path></symbol><symbol id="icon-gitHub" viewBox="0 0 1049 1024"><path d="M523.6581816 52C262.83923907 52 52 262.8401375 52 523.6581816c0 208.49703047 135.09433812 384.97758117 322.50789391 447.44906532 23.42658172 4.68531653 32.01647887-10.15136894 32.01647796-22.64584583 0-10.93210574-0.78163433-48.41463703-0.78163433-87.45953855-131.18885996 28.11189824-158.5200223-56.22379738-158.52002231-56.22379739-21.08437312-54.66232469-52.3201152-68.71827336-52.3201152-68.71827335-42.94858371-28.89353348 3.12384382-28.89353348 3.12384384-28.89353348 47.63479867 3.12384382 72.62285398 48.41643391 72.62285398 48.4164339 42.16784782 71.84121875 110.10538527 51.53758242 137.43654672 39.04400399 3.90457972-30.45500618 16.3990566-51.5393793 29.67427028-63.25222094-104.64023039-10.93300418-214.74561566-51.53848086-214.74561657-232.70524742 0-51.53848086 18.74126609-93.70632867 48.4164339-126.50444187-4.68621496-11.71284164-21.08527156-60.12837711 4.6844181-124.94207075 0 0 39.82563922-12.49447688 129.62738726 48.41463704 37.48253129-10.15136894 78.08980484-15.61742227 117.91454562-15.61742137s80.43201433 5.46605242 117.91454473 15.61742137c89.80264648-60.90911391 129.62828571-48.41463703 129.62828571-48.41463704 25.76879122 64.81369363 9.37063305 113.22922911 4.68531651 124.94207075 30.45410773 32.79721477 48.41463703 74.96506258 48.41463703 126.50444187 0 181.16676656-110.10538527 220.99150644-215.52545401 232.70524742 17.1797934 14.83668547 32.01647887 42.94858371 32.01647886 87.45953946 0 63.25222094-0.78163433 114.009965-0.78163523 129.62738636 0 12.49447688 8.59079468 27.33116234 32.01737731 22.64584583 187.41265734-62.4705866 322.50699547-238.95203574 322.50699546-447.44996375C995.31636231 262.8401375 783.69369203 52 523.6581816 52z" fill="#663399" ></path><path d="M230.82365863 729.03136735c-0.7807359 2.34310703-4.68531653 3.12384382-7.80916035 1.56237113s-5.46605242-4.68531653-3.90368129-7.02842356c0.7807359-2.34220859 4.68531653-3.12384382 7.80826192-1.56147269s4.68531653 4.68531653 3.90457972 7.02752512z m18.7412661 21.08437312c-2.34220859 2.34220859-7.02752512 0.78163433-9.37063305-2.34310703-3.12294539-3.12294539-3.90457972-7.80826192-1.5614727-10.15136894 2.34220859-2.34220859 6.24678922-0.7807359 9.37063305 2.34310702 3.12384382 3.90457972 3.90457972 8.58899782 1.5614727 10.15136895zM268.30618992 777.44690281c-3.12294539 2.34220859-7.80826192 0-10.15136895-3.90457972-3.12384382-3.90457972-3.12384382-9.37063305 0-10.93210574 3.12384382-2.34310703 7.80916035 0 10.15226739 3.90457972 3.12294539 3.90368129 3.12294539 8.58899782 0 10.93210574z m25.76968965 26.55042555c-2.34220859 3.12294539-7.80916035 2.34220859-12.49447688-1.56237113-3.90457972-3.90368129-5.46605242-9.37063305-2.34220859-11.71284164 2.34220859-3.12384382 7.80826192-2.34310703 12.49447687 1.56147269 3.90368129 3.12384382 4.68531653 8.58989625 2.3422086 11.71374008z m35.1403227 14.83668637c-0.78163433 3.90457972-6.24768766 5.46605242-11.71374008 3.90457972-5.46605242-1.5614727-8.58899782-6.24768766-7.80916036-9.37063305 0.78163433-3.90457972 6.24768766-5.46605242 11.71374009-3.90457972 5.46605242 1.5614727 8.58899782 5.46605242 7.80916035 9.37063305z m38.26416562 3.12384382c0 3.90457972-4.68621496 7.02752512-10.15226738 7.02752512-5.46605242 0-10.15226738-3.12294539-10.15226739-7.02752512s4.68621496-7.02842356 10.15226739-7.02842445c5.46605242 0 10.15226738 3.12384382 10.15226738 7.02842445z m35.92016106-6.24768766c0.78163433 3.90457972-3.12384382 7.80916035-8.58899872 8.58989625-5.46695086 0.78163433-10.15226738-1.5614727-10.93390172-5.46605241-0.77983747-3.90457972 3.12384382-7.80916035 8.5907947-8.58899872 5.46605242-0.78163433 10.15136894 1.56057426 10.93210574 5.46515488z m0 0" fill="#663399" ></path></symbol><symbol id="icon-bilibili" viewBox="0 0 1024 1024"><path d="M832.61667555 181.33447111h-164.32545185l74.45617778-74.45617778c12.84020148-12.84020148 12.84020148-30.8140563 0-43.65425778-12.84020148-12.84020148-30.8140563-12.84020148-43.65425778 0L573.2882963 189.04101925H450.04420741L324.2272237 63.23617185c-10.26730667-12.84020148-25.68040297-15.40096-41.08136295-7.70654815-2.57289482 0-2.57289482 2.57289482-5.13365334 5.13365333-12.84020148 12.84020148-12.84020148 30.8140563 0 43.65425779l77.02907259 77.02907259h-164.32545185c-89.86927408 0-164.32545185 74.45617778-164.32545185 164.32545184v408.24073483c0 87.29637925 74.45617778 161.75255703 164.32545185 161.75255703h25.68040296c0 30.8140563 25.68040297 53.92156445 53.92156444 53.92156444s53.92156445-25.68040297 53.92156445-53.92156444H704.23893333c2.57289482 30.8140563 28.24116148 53.92156445 59.05521778 51.34866964 28.24116148-2.57289482 48.78791111-23.10750815 51.34866964-51.34866964h20.53461333c89.86927408 0 164.32545185-74.45617778 164.32545184-164.32545186V343.09916445c-2.56075852-89.86927408-77.02907259-161.76469333-166.88621037-161.76469334z m-5.13365333 634.19429926H200.99527111c-33.37481482 0-59.05521778-28.24116148-61.61597629-61.61597629l-2.57289482-415.94728297c0-33.37481482 28.24116148-61.6159763 61.6159763-61.61597629h626.48775111c33.37481482 0 59.05521778 28.24116148 61.61597629 61.61597629l2.57289482 415.94728297c-2.57289482 35.93557333-28.24116148 61.6159763-61.6159763 61.61597629z" fill="#ff7299" ></path><path d="M403.82919111 417.55534222l15.40096 77.0290726-205.40681481 38.50846815-15.40096-77.0290726 205.40681481-38.50846815z m197.70026667 77.0290726l15.40096-77.0290726 205.40681481 38.50846815-15.40096 77.0290726-205.40681481-38.50846815z m41.08136297 161.75255703c0 2.57289482 0 7.70654815-2.57289483 10.26730667-12.84020148 28.24116148-41.08136297 46.2150163-74.45617777 48.78791111-20.53461333 0-41.08136297-10.26730667-53.92156445-25.68040296-15.40096 15.40096-33.37481482 25.68040297-53.92156445 25.68040296-30.8140563-2.57289482-59.05521778-20.53461333-74.45617777-48.78791111 0-2.57289482-2.57289482-5.13365333-2.57289481-10.26730667 0-10.26730667 7.70654815-17.97385482 17.97385481-20.53461333h2.57289482c7.70654815 0 12.84020148 2.57289482 15.40096 10.26730666 0 0 20.53461333 28.24116148 38.50846815 28.24116149 35.94770963 0 35.94770963-30.8140563 56.48232296-53.92156445 23.10750815 25.68040297 23.10750815 53.92156445 56.48232296 53.92156445 23.10750815 0 38.50846815-28.24116148 38.50846815-28.24116149 2.57289482-5.13365333 10.26730667-10.26730667 15.40096-10.26730666 10.26730667-2.57289482 17.97385482 5.13365333 20.53461333 15.40096v5.13365333h0.0364089z" fill="#ff7299" ></path></symbol></svg>',      o = (o = document.getElementsByTagName("script"))[o.length - 1].getAttribute("data-injectcss"),      p = function (c, l) {        l.parentNode.insertBefore(c, l);      };    if (o && !c.__iconfont__svg__cssinject__) {      c.__iconfont__svg__cssinject__ = !0;      try {        document.write(          "<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>"        );      } catch (c) {        console && console.log(c);      }    }    function d() {      i || ((i = !0), a());    }    function m() {      try {        t.documentElement.doScroll("left");      } catch (c) {        return void setTimeout(m, 50);      }      d();    }    (l = function () {      var c,        l = document.createElement("div");      (l.innerHTML = v),        (v = null),        (l = l.getElementsByTagName("svg")[0]) &&          (l.setAttribute("aria-hidden", "true"),          (l.style.position = "absolute"),          (l.style.width = 0),          (l.style.height = 0),          (l.style.overflow = "hidden"),          (l = l),          (c = document.body).firstChild ? p(l, c.firstChild) : c.appendChild(l));    }),      document.addEventListener        ? ~["complete", "loaded", "interactive"].indexOf(document.readyState)          ? setTimeout(l, 0)          : ((h = function () {              document.removeEventListener("DOMContentLoaded", h, !1), l();            }),            document.addEventListener("DOMContentLoaded", h, !1))        : document.attachEvent &&          ((a = l),          (t = c.document),          (i = !1),          m(),          (t.onreadystatechange = function () {            "complete" == t.readyState && ((t.onreadystatechange = null), d());          }));  })(window);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/manifest.json"/>
      <url>/manifest.json</url>
      
        <content type="html"><![CDATA[{"name":"破茧者~BLOG","short_name":"破茧者~BLOG","theme_color":"#3b70fc","background_color":"#3b70fc","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"/img/siteicon/16.png","sizes":"16x16","type":"image/png"},{"src":"/img/siteicon/32.png","sizes":"32x32","type":"image/png"},{"src":"/img/siteicon/48.png","sizes":"48x48","type":"image/png"},{"src":"/img/siteicon/64.png","sizes":"64x64","type":"image/png"},{"src":"/img/siteicon/128.png","sizes":"128x128","type":"image/png"},{"src":"/img/siteicon/144.png","sizes":"144x144","type":"image/png"},{"src":"/img/siteicon/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/people.min.js"/>
      <url>/js/people.min.js</url>
      
        <content type="html"><![CDATA["use strict";function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,r){if(e){if("string"==typeof e)return _arrayLikeToArray(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(e,r):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,a=new Array(r);t<r;t++)a[t]=e[t];return a}function _classCallCheck(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,r){for(var t=0;t<r.length;t++){var a=r[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function _createClass(e,r,t){return r&&_defineProperties(e.prototype,r),t&&_defineProperties(e,t),e}var config={src:"/img/rcyd.png",rows:15,cols:7},randomRange=function(e,r){return e+Math.random()*(r-e)},randomIndex=function(e){return 0|randomRange(0,e.length)},removeFromArray=function(e,r){return e.splice(r,1)[0]},removeItemFromArray=function(e,r){return removeFromArray(e,e.indexOf(r))},removeRandomFromArray=function(e){return removeFromArray(e,randomIndex(e))},getRandomFromArray=function(e){return e[0|randomIndex(e)]},resetPeep=function(e){var r,t,a=e.stage,n=e.peep,o=Math.random()<.5?1:-1,i=100-250*gsap.parseEase("power2.in")(Math.random()),s=a.height-n.height+i;return 1==o?(r=-n.width,t=a.width,n.scaleX=1):(r=a.width+n.width,t=0,n.scaleX=-1),n.x=r,n.y=s,{startX:r,startY:n.anchorY=s,endX:t}},normalWalk=function(e){var r=e.peep,t=e.props,a=t.startY,n=t.endX,o=gsap.timeline();return o.timeScale(randomRange(.5,1.5)),o.to(r,{duration:10,x:n,ease:"none"},0),o.to(r,{duration:.25,repeat:40,yoyo:!0,y:a-10},0),o},walks=[normalWalk],Peep=function(){function e(r){var t=r.image,a=r.rect;_classCallCheck(this,e),this.image=t,this.setRect(a),this.x=0,this.y=0,this.anchorY=0,this.scaleX=1,this.walk=null}return _createClass(e,[{key:"setRect",value:function(e){this.rect=e,this.width=e[2],this.height=e[3],this.drawArgs=[this.image].concat(_toConsumableArray(e),[0,0,this.width,this.height])}},{key:"render",value:function(e){e.save(),e.translate(this.x,this.y),e.scale(this.scaleX,1),e.drawImage.apply(e,_toConsumableArray(this.drawArgs)),e.restore()}}]),e}(),img=document.createElement("img");img.onload=init,img.src=config.src;let canvas=document.querySelector("#peoplecanvas"),ctx=canvas?canvas.getContext("2d"):void 0,stage={width:0,height:0},allPeeps=[],availablePeeps=[],crowd=[];function init(){canvas&&(createPeeps(),resize(),gsap.ticker.add(render),window.addEventListener("resize",resize))}function createPeeps(){for(var e=config.rows,r=config.cols,t=e*r,a=img.naturalWidth/e,n=img.naturalHeight/r,o=0;o<t;o++)allPeeps.push(new Peep({image:img,rect:[o%e*a,(o/e|0)*n,a,n]}))}function resize(){canvas&&0!==canvas.clientWidth&&(stage.width=canvas.clientWidth,stage.height=canvas.clientHeight,canvas.width=stage.width*devicePixelRatio,canvas.height=stage.height*devicePixelRatio,crowd.forEach(e=>e.walk.kill()),crowd.length=0,availablePeeps.length=0,availablePeeps.push(...allPeeps),initCrowd())}function initCrowd(){for(;availablePeeps.length;)addPeepToCrowd().walk.progress(Math.random())}function addPeepToCrowd(){var e=removeRandomFromArray(availablePeeps),r=getRandomFromArray(walks)({peep:e,props:resetPeep({peep:e,stage:stage})}).eventCallback("onComplete",(function(){removePeepFromCrowd(e),addPeepToCrowd()}));return e.walk=r,crowd.push(e),crowd.sort((a,b)=>a.anchorY-b.anchorY),e}function removePeepFromCrowd(e){removeItemFromArray(crowd,e),availablePeeps.push(e)}function render(){canvas&&(canvas.width=canvas.width,ctx.save(),ctx.scale(devicePixelRatio,devicePixelRatio),crowd.forEach(e=>e.render(ctx)),ctx.restore())}document.addEventListener("pjax:success",e=>{canvas=document.querySelector("#peoplecanvas"),ctx=canvas?canvas.getContext("2d"):void 0,window.removeEventListener("resize",resize),gsap.ticker.remove(render),setTimeout(()=>{init()},300)});]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/hexo_githubcalendar.js"/>
      <url>/js/hexo_githubcalendar.js</url>
      
        <content type="html"><![CDATA[function GithubCalendar(git_githubapiurl,git_color,git_user){    if(document.getElementById('github_container')){        var github_canlendar = (git_user,git_githubapiurl, git_color) => {            var git_fixed = 'fixed';            var git_px = 'px';            var git_month = ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'];            var git_monthchange = [];            var git_oneyearbeforeday = '';            var git_thisday = '';            var git_amonthago = '';            var git_aweekago = '';            var git_weekdatacore = 0;            var git_datacore = 0;            var git_total = 0;            var git_datadate = '';            var git_git_data = [];            var git_positionplusdata = [];            var git_firstweek = [];            var git_lastweek = [];            var git_beforeweek = [];            var git_thisweekdatacore = 0;            var git_mounthbeforeday = 0;            var git_mounthfirstindex = 0;            var git_crispedges = 'crispedges';            var git_thisdayindex = 0;            var git_amonthagoindex = 0;            var git_amonthagoweek = [];            var git_firstdate = [];            var git_first2date = [];            var git_montharrbefore = [];            var git_monthindex = 0;                        var retinaCanvas = (canvas, context, ratio) => {                if (ratio > 1) {                    var canvasWidth = canvas.width;                    var canvasHeight = canvas.height;                     canvas.width = canvasWidth * ratio;                     canvas.height = canvasHeight * ratio;                     canvas.style.width = '100%';                     canvas.style.height = canvasHeight + 'px';                     context.scale(ratio, ratio);                    }                }            var responsiveChart = () => {        if(document.getElementById("gitcanvas")){        var git_tooltip_container = document.getElementById('git_tooltip_container');        var ratio = window.devicePixelRatio || 1        var git_x = '';        var git_y = '';        var git_span1 = '';        var git_span2 = '';        var github_calendar_c = document.getElementById("gitcanvas");        github_calendar_c.style.width ='100%';        github_calendar_c.style.height ='';        var cmessage = document.getElementById("gitmessage");        var github_calendar_ctx = github_calendar_c.getContext("2d");        width = github_calendar_c.width = document.getElementById("gitcalendarcanvasbox").offsetWidth;        height = github_calendar_c.height = 9 * 0.96 * github_calendar_c.width / git_data.length;        retinaCanvas(github_calendar_c, github_calendar_ctx, ratio)        var linemaxwitdh = height / 9;        var lineminwitdh = 0.8 * linemaxwitdh;        var setposition = {x: 0.02 * width, y: 0.025 * width};        for (var week in git_data) {          weekdata = git_data[week];          for (var day in weekdata) {            var dataitem = {date: "", count: "", x: 0, y: 0};            git_positionplusdata.push(dataitem);            github_calendar_ctx.fillStyle = git_thiscolor(git_color, weekdata[day].count);            setposition.y = Math.round(setposition.y * 100) / 100;            dataitem.date = weekdata[day].date;            dataitem.count = weekdata[day].count;            dataitem.x = setposition.x;            dataitem.y = setposition.y;            github_calendar_ctx.fillRect(setposition.x, setposition.y, lineminwitdh, lineminwitdh);            setposition.y = setposition.y + linemaxwitdh          }          setposition.y = 0.025 * width;          setposition.x = setposition.x + linemaxwitdh;        }        if (document.body.clientWidth > 700) {          github_calendar_ctx.font = "600  Arial";          github_calendar_ctx.fillStyle = '#aaa';          github_calendar_ctx.fillText("日", 0, 1.9 * linemaxwitdh);          github_calendar_ctx.fillText("二", 0, 3.9 * linemaxwitdh);          github_calendar_ctx.fillText("四", 0, 5.9 * linemaxwitdh);          github_calendar_ctx.fillText("六", 0, 7.9 * linemaxwitdh);          var monthindexlist = github_calendar_c.width / 24;          for (var index in git_monthchange) {            github_calendar_ctx.fillText(git_monthchange[index], monthindexlist, 0.7 * linemaxwitdh);            monthindexlist = monthindexlist + github_calendar_c.width / 12          }        }        github_calendar_c.onmousemove = function (event) {          if (document.querySelector('.gitmessage')) {            git_tooltip_container.innerHTML = ""          }          getMousePos(github_calendar_c, event)        };        git_tooltip_container.onmousemove = function (event) {          if (document.querySelector('.gitmessage')) {            git_tooltip_container.innerHTML = ""          }        };        var getMousePos = (canvas, event) => {          var rect = canvas.getBoundingClientRect();          var x = event.clientX - rect.left * (canvas.width / rect.width);          var y = event.clientY - rect.top * (canvas.height / rect.height);          for (var item of git_positionplusdata) {            var lenthx = x - item.x;            var lenthy = y - item.y;            if (0 < lenthx && lenthx < lineminwitdh) {              if (0 < lenthy && lenthy < lineminwitdh) {                git_span1 = item.date;                git_span2 = item.count;                git_x = event.clientX - 100;                git_y = event.clientY - 60;                html = tooltip_html(git_x, git_y, git_span1, git_span2);                append_div_gitcalendar(git_tooltip_container, html)              }            }          }        }      }}            var addlastmonth = () => {                if (git_thisdayindex === 0) {                    thisweekcore(52);                    thisweekcore(51);                    thisweekcore(50);                    thisweekcore(49);                    thisweekcore(48);                    git_thisweekdatacore += git_firstdate[6].count;                    git_amonthago = git_firstdate[6].date                } else {                    thisweekcore(52);                    thisweekcore(51);                    thisweekcore(50);                    thisweekcore(49);                    thisweek2core();                    git_amonthago = git_first2date[git_thisdayindex - 1].date                }            }            var thisweek2core = () => {                for (var i = git_thisdayindex - 1; i < git_first2date.length; i++) {                    git_thisweekdatacore += git_first2date[i].count                }            }            var thisweekcore = (index)  => {                for (var item of git_data[index]) {                    git_thisweekdatacore += item.count                }            }            var addlastweek = () => {                for (var item of git_lastweek) {                    git_weekdatacore += item.count                }            }            var addbeforeweek = () => {                for (var i = git_thisdayindex; i < git_beforeweek.length; i++) {                    git_weekdatacore += git_beforeweek[i].count                }            }            var addweek = (data) => {                if (git_thisdayindex === 6) {                    git_aweekago = git_lastweek[0].date;                    addlastweek()                } else {                    lastweek = data.contributions[51];                    git_aweekago = lastweek[git_thisdayindex + 1].date;                    addlastweek();                    addbeforeweek()                }            }            fetch(git_githubapiurl).then(data => data.json()).then(data => {                if(document.getElementById('github_loading')){                    document.getElementById('github_loading').remove()};                git_data = data.contributions;                git_total = data.total;                git_first2date = git_data[48];                git_firstdate = git_data[47];                git_firstweek = data.contributions[0];                git_lastweek = data.contributions[52];                git_beforeweek = data.contributions[51];                git_thisdayindex = git_lastweek.length - 1;                git_thisday = git_lastweek[git_thisdayindex].date;                git_oneyearbeforeday = git_firstweek[0].date;                git_monthindex = git_thisday.substring(5, 7) * 1;                git_montharrbefore = git_month.splice(git_monthindex, 12 - git_monthindex);                git_monthchange = git_montharrbefore.concat(git_month);                addweek(data);                addlastmonth();                var html = github_main_box(git_monthchange, git_data, git_user, git_color, git_total, git_thisweekdatacore, git_weekdatacore, git_oneyearbeforeday, git_thisday, git_aweekago, git_amonthago);                append_div_gitcalendar(github_container, html);                responsiveChart()            }).catch(function (error) {                console.log(error)            });            window.onresize = function () {                responsiveChart()            };            window.onscroll = function () {                if (document.querySelector('.gitmessage')) {                    git_tooltip_container.innerHTML = ""                }            };            var git_thiscolor = (color, x) => {                if (x === 0) {                    var i = parseInt(x / 2);                    return color[0]                } else if (x < 2) {                    return color[1]                } else if (x < 20) {                    var i = parseInt(x / 2);                    return color[i]                } else {                    return color[9]                }            };            var tooltip_html = (x, y, span1, span2) => {                var html = '';                html += '<div class="gitmessage" style="top:' + y + 'px;left:' + x + 'px;position: fixed;z-index:9999"><div class="angle-wrapper" style="display:block;"><span>' + span1 + '&nbsp;</span><span>' + span2 + ' 次上传</span></div></div>';                return html            };            var github_canvas_box = () => {                var html = '<div id="gitcalendarcanvasbox"> <canvas id="gitcanvas" style="animation: none;"></canvas></div>';                return html            };            var github_info_box = (user, color) => {                var html = '';                html += '<div id="git_tooltip_container"></div><div class="contrib-footer clearfix mt-1 mx-3 px-3 pb-1"><div class="float-left text-gray">数据来源 <a href="https://github.com/' + user + '" target="blank">@' + user + '</a></div><div class="contrib-legend text-gray">Less <ul class="legend"><li style="background-color:' + color[0] + '"></li><li style="background-color:' + color[2] + '"></li><li style="background-color:' + color[4] + '"></li><li style="background-color:' + color[6] + '"></li><li style="background-color:' + color[8] + '"></li></ul>More </div></div>';                return html            };            var github_main_box = (monthchange, git_data, user, color, total, thisweekdatacore, weekdatacore, oneyearbeforeday, thisday, aweekago, amonthago) => {                var html = '';                var canvasbox = github_canvas_box();                var infobox = github_info_box(user, color);                var style = github_main_style();                html += '<div class="position-relative"><div class="border py-2 graph-before-activity-overview"><div class="js-gitcalendar-graph mx-md-2 mx-3 d-flex flex-column flex-items-end flex-xl-items-center overflow-hidden pt-1 is-graph-loading graph-canvas gitcalendar-graph height-full text-center">' + canvasbox + '</div>' + infobox + '</div></div>';                html += '<div style="display:flex;width:100%"><div class="contrib-column contrib-column-first table-column"><span class="text-muted">过去一年提交</span><span class="contrib-number">' + total + '</span><span class="text-muted">' + oneyearbeforeday + '&nbsp;-&nbsp;' + thisday + '</span></div><div class="contrib-column table-column"><span class="text-muted">最近一月提交</span><span class="contrib-number">' + thisweekdatacore + '</span><span class="text-muted">' + amonthago + '&nbsp;-&nbsp;' + thisday + '</span></div><div class="contrib-column table-column"><span class="text-muted">最近一周提交</span><span class="contrib-number">' + weekdatacore + '</span><span class="text-muted">' + aweekago + '&nbsp;-&nbsp;' + thisday + '</span></div></div>' + style;                return html            };            var github_main_style = () => {                style = '<style>#github_container{text-align:center;margin:0 auto;width:100%;display:flex;display:-webkit-flex;justify-content:center;align-items:center;flex-wrap:wrap;}.gitcalendar-graph text.wday,.gitcalendar-graph text.month{font-size:10px;fill:#aaa;}.contrib-legend{text-align:right;padding:0 14px 10px 0;display:inline-block;float:right;}.contrib-legend .legend{display:inline-block;list-style:none;margin:0 5px;position:relative;bottom:-1px;padding:0;}.contrib-legend .legend li{display:inline-block;width:10px;height:10px;}.text-small{font-size:12px;color:#767676;}.gitcalendar-graph{padding:15px 0 0;text-align:center;}.contrib-column{text-align:center;border-top:1px dashed #818181;font-size:11px;}.contrib-column-first{border-left:0;}.table-column{padding:10px;display:table-cell;flex:1;vertical-align:top;}.contrib-number{font-weight:300;line-height:1.3em;font-size:24px;display:block;}.gitcalendar img.spinner{width:70px;margin-top:50px;min-height:70px;}.monospace{text-align:center;color:#000;font-family:monospace;}.monospace a{color:#1D75AB;text-decoration:none;}.contrib-footer{font-size:11px;padding:0 10px 12px;text-align:left;width:100%;box-sizing:border-box;height:26px;}.left.text-muted{float:left;margin-left:9px;color:#767676;}.left.text-muted a{color:#4078c0;text-decoration:none;}.left.text-muted a:hover,.monospace a:hover{text-decoration:underline;}h2.f4.text-normal.mb-3{display:none;}.float-left.text-gray{float:left;}#user-activity-overview{display:none;}.day-tooltip{white-space:nowrap;position:absolute;z-index:99999;padding:10px;font-size:12px;color:#959da5;text-align:center;background:rgba(0,0,0,.85);border-radius:3px;display:none;pointer-events:none;}.day-tooltip strong{color:#dfe2e5;}.day-tooltip.is-visible{display:block;}.day-tooltip:after{position:absolute;bottom:-10px;left:50%;width:5px;height:5px;box-sizing:border-box;margin:0 0 0 -5px;content:" ";border:5px solid transparent;border-top-color:rgba(0,0,0,.85)}.position-relative{width:100%;}@media screen and (max-width:650px){.contrib-column{display:none}}.angle-wrapper{z-index:9999;display:inline;width:200px;height:40px;position:relative;padding:5px 0;background:rgba(0,0,0,0.8);border-radius:8px;text-align:center;color:white;}.angle-box{position:fixed;padding:10px}.angle-wrapper span{padding-bottom:1em;}.angle-wrapper:before{content:"";width:0;height:0;border:10px solid transparent;border-top-color:rgba(0,0,0,0.8);position:absolute;left:47.5%;top:100%;}</style>';                return style            }        };        var append_div_gitcalendar = (parent, text) => {            if (typeof text === 'string') {                var temp = document.createElement('div');                temp.innerHTML = text;                var frag = document.createDocumentFragment();                while (temp.firstChild) {                    frag.appendChild(temp.firstChild)                }                parent.appendChild(frag)            } else {                parent.appendChild(text)            }        };        var github_container = document.getElementById('github_container');        var github_loading = document.getElementById('github_loading');        github_canlendar(git_user,git_githubapiurl, git_color)}}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/people.js"/>
      <url>/js/people.js</url>
      
        <content type="html"><![CDATA["use strict";function _toConsumableArray(e) {  return _arrayWithoutHoles(e) || _iterableToArray(e) || _unsupportedIterableToArray(e) || _nonIterableSpread();}function _nonIterableSpread() {  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(e, r) {  if (e) {    if ("string" == typeof e) return _arrayLikeToArray(e, r);    var t = Object.prototype.toString.call(e).slice(8, -1);    return "Object" === t && e.constructor && (t = e.constructor.name),      "Map" === t || "Set" === t ? Array.from(e)      : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)        ? _arrayLikeToArray(e, r)        : void 0;  }}function _iterableToArray(e) {  if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e);}function _arrayWithoutHoles(e) {  if (Array.isArray(e)) return _arrayLikeToArray(e);}function _arrayLikeToArray(e, r) {  (null == r || r > e.length) && (r = e.length);  for (var t = 0, a = new Array(r); t < r; t++) a[t] = e[t];  return a;}function _classCallCheck(e, r) {  if (!(e instanceof r)) throw new TypeError("Cannot call a class as a function");}function _defineProperties(e, r) {  for (var t = 0; t < r.length; t++) {    var a = r[t];    a.enumerable = a.enumerable || !1;    a.configurable = !0;    "value" in a && (a.writable = !0);    Object.defineProperty(e, a.key, a);  }}function _createClass(e, r, t) {  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), e;}// 配置项var config = {  src: "/img/rcyd.png",  rows: 15,  cols: 7};// 随机工具函数var randomRange = function (e, r) {  return e + Math.random() * (r - e);};var randomIndex = function (e) {  return 0 | randomRange(0, e.length);};var removeFromArray = function (e, r) {  return e.splice(r, 1)[0];};var removeItemFromArray = function (e, r) {  return removeFromArray(e, e.indexOf(r));};var removeRandomFromArray = function (e) {  return removeFromArray(e, randomIndex(e));};var getRandomFromArray = function (e) {  return e[0 | randomIndex(e)];};// 设置人物初始位置var resetPeep = function (e) {  var r, t, a = e.stage, n = e.peep, o = Math.random() < 0.5 ? 1 : -1;  var i = 100 - 250 * gsap.parseEase("power2.in")(Math.random());  var s = a.height - n.height + i;  if (o == 1) {    r = -n.width, t = a.width, n.scaleX = 1;  } else {    r = a.width + n.width, t = 0, n.scaleX = -1;  }  n.x = r;  n.y = s;  return { startX: r, startY: n.anchorY = s, endX: t };};// 行走动画定义var normalWalk = function (e) {  var r = e.peep, t = e.props, a = t.startY, n = t.endX, o = gsap.timeline();  o.timeScale(randomRange(0.5, 1.5));  o.to(r, { duration: 10, x: n, ease: "none" }, 0);  o.to(r, { duration: 0.25, repeat: 40, yoyo: !0, y: a - 10 }, 0);  return o;};var walks = [normalWalk];// Peep 类var Peep = function () {  function e(r) {    var t = r.image, a = r.rect;    _classCallCheck(this, e);    this.image = t;    this.setRect(a);    this.x = 0;    this.y = 0;    this.anchorY = 0;    this.scaleX = 1;    this.walk = null;  }  return _createClass(e, [{    key: "setRect",    value: function (e) {      this.rect = e;      this.width = e[2];      this.height = e[3];      this.drawArgs = [this.image].concat(_toConsumableArray(e), [0, 0, this.width, this.height]);    }  }, {    key: "render",    value: function (e) {      e.save();      e.translate(this.x, this.y);      e.scale(this.scaleX, 1);      e.drawImage.apply(e, _toConsumableArray(this.drawArgs));      e.restore();    }  }]), e;}();// 主逻辑var img = document.createElement("img");img.onload = init;img.src = config.src;let canvas = document.querySelector("#peoplecanvas");let ctx = canvas ? canvas.getContext("2d") : void 0;let stage = { width: 0, height: 0 };let allPeeps = [], availablePeeps = [], crowd = [];function init() {  if (!canvas) return;  createPeeps();  resize();  gsap.ticker.add(render);  window.addEventListener("resize", resize);}function createPeeps() {  var e = config.rows, r = config.cols, t = e * r;  var a = img.naturalWidth / e;  var n = img.naturalHeight / r;  for (var o = 0; o < t; o++) {    allPeeps.push(new Peep({      image: img,      rect: [o % e * a, (o / e | 0) * n, a, n]    }));  }}function resize() {  if (!canvas || canvas.clientWidth === 0) return;  stage.width = canvas.clientWidth;  stage.height = canvas.clientHeight;  canvas.width = stage.width * devicePixelRatio;  canvas.height = stage.height * devicePixelRatio;  crowd.forEach((e) => e.walk.kill());  crowd.length = 0;  availablePeeps.length = 0;  availablePeeps.push(...allPeeps);  initCrowd();}function initCrowd() {  while (availablePeeps.length) {    addPeepToCrowd().walk.progress(Math.random());  }}function addPeepToCrowd() {  var e = removeRandomFromArray(availablePeeps);  var r = getRandomFromArray(walks)({    peep: e,    props: resetPeep({ peep: e, stage: stage })  }).eventCallback("onComplete", function () {    removePeepFromCrowd(e);    addPeepToCrowd();  });  e.walk = r;  crowd.push(e);  crowd.sort((a, b) => a.anchorY - b.anchorY);  return e;}function removePeepFromCrowd(e) {  removeItemFromArray(crowd, e);  availablePeeps.push(e);}function render() {  if (!canvas) return;  canvas.width = canvas.width;  ctx.save();  ctx.scale(devicePixelRatio, devicePixelRatio);  crowd.forEach((e) => e.render(ctx));  ctx.restore();}// 页面跳转重新初始化document.addEventListener("pjax:success", (e) => {  canvas = document.querySelector("#peoplecanvas");  ctx = canvas ? canvas.getContext("2d") : void 0;  window.removeEventListener("resize", resize);  gsap.ticker.remove(render);  setTimeout(() => { init(); }, 300);});]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/coin.js"/>
      <url>/js/coin.js</url>
      
        <content type="html"><![CDATA[var tipButtons = document.querySelectorAll('.tip-button')function coinAudio() {  var coinAudio = document.getElementById("coinAudio");  if (coinAudio) {    coinAudio.play();//有音频时播放  }}// Loop through all buttons (allows for multiple buttons on page)tipButtons.forEach((button) => {  var coin = button.querySelector('.coin')  // The larger the number, the slower the animation  coin.maxMoveLoopCount = 90  button.addEventListener('click', () => {    if (/Android|webOS|BlackBerry/i.test(navigator.userAgent)) return true; //媒体选择    if (button.clicked) return    button.classList.add('clicked')    // Wait to start flipping th coin because of the button tilt animation    setTimeout(() => {      // Randomize the flipping speeds just for fun      coin.sideRotationCount = Math.floor(Math.random() * 5) * 90      coin.maxFlipAngle = (Math.floor(Math.random() * 4) + 3) * Math.PI      button.clicked = true      flipCoin()      coinAudio()    }, 50)  })  var flipCoin = () => {    coin.moveLoopCount = 0    flipCoinLoop()  }  var resetCoin = () => {    coin.style.setProperty('--coin-x-multiplier', 0)    coin.style.setProperty('--coin-scale-multiplier', 0)    coin.style.setProperty('--coin-rotation-multiplier', 0)    coin.style.setProperty('--shine-opacity-multiplier', 0.4)    coin.style.setProperty('--shine-bg-multiplier', '50%')    coin.style.setProperty('opacity', 1)    // Delay to give the reset animation some time before you can click again    setTimeout(() => {      button.clicked = false    }, 300)  }  var flipCoinLoop = () => {    coin.moveLoopCount++    var percentageCompleted = coin.moveLoopCount / coin.maxMoveLoopCount    coin.angle = -coin.maxFlipAngle * Math.pow((percentageCompleted - 1), 2) + coin.maxFlipAngle    // Calculate the scale and position of the coin moving through the air    coin.style.setProperty('--coin-y-multiplier', -11 * Math.pow(percentageCompleted * 2 - 1, 4) + 11)    coin.style.setProperty('--coin-x-multiplier', percentageCompleted)    coin.style.setProperty('--coin-scale-multiplier', percentageCompleted * 0.6)    coin.style.setProperty('--coin-rotation-multiplier', percentageCompleted * coin.sideRotationCount)    // Calculate the scale and position values for the different coin faces    // The math uses sin/cos wave functions to similate the circular motion of 3D spin    coin.style.setProperty('--front-scale-multiplier', Math.max(Math.cos(coin.angle), 0))    coin.style.setProperty('--front-y-multiplier', Math.sin(coin.angle))    coin.style.setProperty('--middle-scale-multiplier', Math.abs(Math.cos(coin.angle), 0))    coin.style.setProperty('--middle-y-multiplier', Math.cos((coin.angle + Math.PI / 2) % Math.PI))    coin.style.setProperty('--back-scale-multiplier', Math.max(Math.cos(coin.angle - Math.PI), 0))    coin.style.setProperty('--back-y-multiplier', Math.sin(coin.angle - Math.PI))    coin.style.setProperty('--shine-opacity-multiplier', 4 * Math.sin((coin.angle + Math.PI / 2) % Math.PI) - 3.2)    coin.style.setProperty('--shine-bg-multiplier', -40 * (Math.cos((coin.angle + Math.PI / 2) % Math.PI) - 0.5) + '%')    // Repeat animation loop    if (coin.moveLoopCount < coin.maxMoveLoopCount) {      if (coin.moveLoopCount === coin.maxMoveLoopCount - 6) button.classList.add('shrink-landing')      window.requestAnimationFrame(flipCoinLoop)    } else {      button.classList.add('coin-landed')      coin.style.setProperty('opacity', 0)      setTimeout(() => {        button.classList.remove('clicked', 'shrink-landing', 'coin-landed')        setTimeout(() => {          resetCoin()        }, 300)      }, 1500)    }  }})]]></content>
      
    </entry>
    
    
  
</search>
